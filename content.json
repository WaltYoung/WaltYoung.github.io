{"meta":{"title":"WaltYoung","subtitle":"个人博客","description":"为世界上所有美好而战","author":"WaltYoung","url":"https://WaltYoung.github.io","root":"/"},"pages":[{"title":"categories","date":"2023-06-15T15:45:28.000Z","updated":"2023-06-15T15:46:53.801Z","comments":true,"path":"categories/index.html","permalink":"https://waltyoung.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2023-06-15T15:38:57.000Z","updated":"2023-06-15T15:41:19.064Z","comments":true,"path":"tags/index.html","permalink":"https://waltyoung.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"成为未来的管理者之前的笔记","slug":"成为未来的管理者之前的笔记","date":"2023-08-31T16:58:58.000Z","updated":"2023-08-31T17:01:01.416Z","comments":true,"path":"2023/09/01/成为未来的管理者之前的笔记/","link":"","permalink":"https://waltyoung.github.io/2023/09/01/%E6%88%90%E4%B8%BA%E6%9C%AA%E6%9D%A5%E7%9A%84%E7%AE%A1%E7%90%86%E8%80%85%E4%B9%8B%E5%89%8D%E7%9A%84%E7%AC%94%E8%AE%B0/","excerpt":"","text":"成为未来的管理者之前的笔记 不辞退不够强的人，是对其他正在付出的人的不尊重 盲目换人从来不解决本质问题 有效量化，降低信息差，是企业运作的核心 搭建适合自己的信息系统（工具：飞书、共享文档） 会议优化（具体执行方法：在开会之前采用协作文档，共同记录信息；会议开始后，所有人静默10min阅读文档，有疑点的地方直接批注，在线交流；之后的会议只讨论批注的问题。目的：压缩会议时长，避免侃大山，减小部门间的信息差） 人性是经不起挑战的，商业，是切蛋糕的艺术，即利益分配要合理 OKR体系：全称是 Objectives &amp; Key Results，即目标与关键成果。 O是努力的方向和目标，概念意义上的，代表你到底要去哪里 KR是理想结果，必须可量化，具体到面向个人，代表具体怎么去 参考链接：https://zhuanlan.zhihu.com/p/265830351 内容创作者不要把自己当回事（对于内容创作者需要知道的行业规则之一：和代理有效沟通“返点”问题） 一个优秀的视频应当具备的要素：HKRR（H：Happiness，K：Knowledge，R：Resonance，R：Rhythm） 电影行业的技巧————时钟理论：将视频的时长作为圆的周长，标出0点、3点、6点、9点的内容，如果这四个点没有爆点，那么必须修改，尽可能让刺激点充满整个时钟。目的：可视化视频节奏 不融资的话，团队人数上限不应超过20人 不要留恋成功的一刻，不要躺在功劳簿上享福","categories":[],"tags":[{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"管理","slug":"管理","permalink":"https://waltyoung.github.io/tags/%E7%AE%A1%E7%90%86/"}]},{"title":"网络安全成长路径","slug":"网络安全成长路径","date":"2023-08-31T05:08:06.000Z","updated":"2023-08-31T17:00:35.140Z","comments":true,"path":"2023/08/31/网络安全成长路径/","link":"","permalink":"https://waltyoung.github.io/2023/08/31/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%88%90%E9%95%BF%E8%B7%AF%E5%BE%84/","excerpt":"","text":"网络安全成长路径 学习“小迪安全-渗透测试”的课程 考证：软考（中级信息安全工程师）、CISP（CISP-PTE、CISP-PTS）、OSCP 获取CNVD证书 SRC平台挖漏洞 写一个GitHub项目 搭建一个blog站，记录学习过程与经历，如记一次XXX或记一次XXX到XXX 参加CTF比赛 参考链接：https://blog.csdn.net/m0_67286096&#x2F;article&#x2F;details&#x2F;124020811","categories":[],"tags":[{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"网络安全","slug":"网络安全","permalink":"https://waltyoung.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}]},{"title":"CMD的常见符号及其作用","slug":"CMD的常见符号及其作用","date":"2023-08-30T01:58:41.000Z","updated":"2023-08-30T02:37:43.298Z","comments":true,"path":"2023/08/30/CMD的常见符号及其作用/","link":"","permalink":"https://waltyoung.github.io/2023/08/30/CMD%E7%9A%84%E5%B8%B8%E8%A7%81%E7%AC%A6%E5%8F%B7%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8/","excerpt":"","text":"Q：tasklist | findstr &quot;cmd&quot;此命令中的“|”是什么作用？ A：在CMD中，”|”（管道符号）的作用是将前一个命令的输出作为后一个命令的输入。在给出的命令中，”tasklist”命令用于列出当前正在运行的进程列表，而”findstr”命令用于在输出结果中查找包含指定字符串（在此例中是”cmd”）的行。所以整个命令的作用是列出当前正在运行的进程列表，并在结果中筛选出包含”cmd”字符串的行。 CMD的常见符号及其作用 ： “&gt;”：重定向符号。用于将命令的输出重定向到文件。例如，”dir &gt; output.txt”将”dir”命令的输出保存到名为”output.txt”的文件中。 “&gt;&gt;”：追加重定向符号。与”&gt;”类似，但是会将命令的输出追加到文件的末尾，而不是覆盖文件内容。 “&lt;”：输入重定向符号。用于将文件中的内容作为命令的输入。例如，”sort &lt; input.txt”将”input.txt”文件中的内容作为”sort”命令的输入进行排序。 “&amp;”：命令分隔符。用于在一行中运行多个命令。例如，”command1 &amp; command2”将依次执行”command1”和”command2”。 “&amp;&amp;”：条件命令分隔符。只有前一个命令成功执行后，才会执行后续的命令。例如，”command1 &amp;&amp; command2”只有在”command1”成功执行后，才会执行”command2”。 “||”：条件命令分隔符。只有前一个命令执行失败后，才会执行后续的命令。例如，”command1 || command2”只有在”command1”执行失败后，才会执行”command2”。 这些符号可以帮助您在CMD下更有效地执行命令和操作。请注意，有些符号在不同的操作系统或命令行环境中可能会有不同的行为。","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"不同操作系统对待换行符的不同态度","slug":"不同操作系统对待换行符的不同态度","date":"2023-08-29T01:18:17.000Z","updated":"2023-08-29T01:22:04.658Z","comments":true,"path":"2023/08/29/不同操作系统对待换行符的不同态度/","link":"","permalink":"https://waltyoung.github.io/2023/08/29/%E4%B8%8D%E5%90%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%BE%85%E6%8D%A2%E8%A1%8C%E7%AC%A6%E7%9A%84%E4%B8%8D%E5%90%8C%E6%80%81%E5%BA%A6/","excerpt":"","text":"不同操作系统对待换行符的主要区别在于使用的字符不同。 在Windows操作系统中，换行符由两个字符组成：回车符（CR）和换行符（LF），表示为”\\r\\n”。 在Unix&#x2F;Linux操作系统中，换行符只有一个字符：换行符（LF），表示为”\\n”。 在Macintosh操作系统中，换行符只有一个字符：回车符（CR），表示为”\\r”。 这些差异可能会导致在不同操作系统之间传输文本文件时出现格式问题。","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"DoS压力测试工具——Slowhttptest","slug":"DoS压力测试工具——Slowhttptest","date":"2023-08-28T04:31:32.000Z","updated":"2023-08-28T04:36:06.543Z","comments":true,"path":"2023/08/28/DoS压力测试工具——Slowhttptest/","link":"","permalink":"https://waltyoung.github.io/2023/08/28/DoS%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94Slowhttptest/","excerpt":"","text":"安装命令：apt-get install slowhttptest 使用方法：ulimit -n 8000 &amp;&amp; slowhttptest -c 8000 -X -r 100 -g -o / -w 512 -y 1024 -n 5 -z 32 -k 3 -u http://caichuanqi.cn -p 3 参考链接：https://caichuanqi.blog.csdn.net/article/details/124744284","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://waltyoung.github.io/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"云服务器上基于Docker搭建AWVS教程","slug":"AWVS安装教程","date":"2023-07-09T11:42:07.000Z","updated":"2023-08-28T01:37:06.675Z","comments":true,"path":"2023/07/09/AWVS安装教程/","link":"","permalink":"https://waltyoung.github.io/2023/07/09/AWVS%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","excerpt":"","text":"第0步：系统更新笔者使用的Linux系统是Debian 11.1 64bit。 切换到root用户，并且注意全程使用root用户 1su 更新软件包列表 1apt-get update 进行一次升级 1apt-get upgrade 第1步：安装Docker安装docker和docker-compose 1apt-get install docker docker-compose 安装Docker依赖 1apt-get install docker.io 安装完成后使用如下命令检查安装是否成功 1docker -v 第2步：安装AWVS拉取Docker镜像 1docker pull quay.io/hiepnv/acunetix 创建名为acunetix_data的Docker卷 1docker volume create acunetix_data 运行acunetix_web的容器 1docker run -d -p 3443:3443 --restart=unless-stoped --name=acunetix_web quay.io/hiepnv/acunetix 第3步：开放端口云服务器防火墙开放端口，个人使用可以全部开放，如有必要则可以选择只开放3443端口 第4步：测试必须通过HTTPS访问3443端口 默认账户：&#x61;&#100;&#x6d;&#x69;&#x6e;&#x40;&#97;&#x63;&#117;&#x2e;&#99;&#x6f;&#x6d; 默认密码：Passw0rd!","categories":[],"tags":[{"name":"AWVS","slug":"AWVS","permalink":"https://waltyoung.github.io/tags/AWVS/"},{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"}]},{"title":"基于Hexo框架搭建个人博客教程","slug":"基于Hexo框架搭建个人博客教程","date":"2023-06-17T09:16:19.000Z","updated":"2023-08-28T01:37:27.486Z","comments":true,"path":"2023/06/17/基于Hexo框架搭建个人博客教程/","link":"","permalink":"https://waltyoung.github.io/2023/06/17/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/","excerpt":"","text":"本文前置技能：虚拟机的安装与初始化，Linux操作系统基础 第0步：系统更新笔者使用的Linux系统是Ubuntu LTS22.0.4。所有使用Debian内核的Linux都可遵循本教程。 切换到root用户，并且注意全程使用root用户 1su 更新软件包列表 1apt-get update 进行一次升级 1apt-get upgrade 第1步：安装Git注意使用root用户 1apt-get install git 安装完成后使用如下命令检查安装是否成功 1git --version 第2步：安装Nodejs注意使用root用户 12apt-get install nodeapt-get install npm 安装完成后使用如下命令检查安装是否成功 12node -vnpm -v 第3步：安装及初始化Hexo注意使用root用户 1npm install -g hexo-cli 安装完成后使用如下命令检查安装是否成功 1hexo -v 初始化Hexo 1hexo init 启动服务 1hexo s 在终端中右键打开链接http://localhost:4000/打开Hexo生成的默认网页 未完待续…","categories":[],"tags":[{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://waltyoung.github.io/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-06-14T16:55:48.726Z","updated":"2023-06-14T16:55:48.726Z","comments":true,"path":"2023/06/15/hello-world/","link":"","permalink":"https://waltyoung.github.io/2023/06/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"管理","slug":"管理","permalink":"https://waltyoung.github.io/tags/%E7%AE%A1%E7%90%86/"},{"name":"网络安全","slug":"网络安全","permalink":"https://waltyoung.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"工具","slug":"工具","permalink":"https://waltyoung.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"AWVS","slug":"AWVS","permalink":"https://waltyoung.github.io/tags/AWVS/"},{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://waltyoung.github.io/tags/Hexo/"}]}