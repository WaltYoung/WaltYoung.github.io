{"meta":{"title":"WaltYoung","subtitle":"个人博客","description":"为世界上所有美好而战","author":"WaltYoung","url":"https://WaltYoung.github.io","root":"/"},"pages":[{"title":"分类","date":"2023-06-15T15:45:28.000Z","updated":"2023-09-11T03:27:28.650Z","comments":true,"path":"categories/index.html","permalink":"https://waltyoung.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2023-06-15T15:38:57.000Z","updated":"2023-09-11T03:28:02.306Z","comments":true,"path":"tags/index.html","permalink":"https://waltyoung.github.io/tags/index.html","excerpt":"","text":""},{"title":"音乐","date":"2023-09-11T02:12:34.000Z","updated":"2023-09-12T01:35:58.254Z","comments":true,"path":"music/index.html","permalink":"https://waltyoung.github.io/music/index.html","excerpt":"","text":"​ ​ var demo = new APlayer ({ element: document.getElementById('demo'), showlrc: false, fixed: false, mini: false, audio: [ { title: '星辰大海', author: '黄霄雲', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%BB%84%E9%9C%84%E9%9B%B2%20-%20%E6%98%9F%E8%BE%B0%E5%A4%A7%E6%B5%B7.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'Beautiful World', author: '宇多田光', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/Beautiful%20World%20-%20%E5%AE%87%E5%A4%9A%E7%94%B0%E5%85%89.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '残酷な天使のテーゼ', author: '高橋洋子', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%AB%98%E6%A9%8B%E6%B4%8B%E5%AD%90%20%28%E3%81%9F%E3%81%8B%E3%81%AF%E3%81%97%20%E3%82%88%E3%81%86%E3%81%93%29%20-%20%E6%AE%8B%E9%85%B7%E3%81%AA%E5%A4%A9%E4%BD%BF%E3%81%AE%E3%83%86%E3%83%BC%E3%82%BC%20%28Cruel%20Angel%27s%20Thesis%29%20%28Ambivalence%20Mix%29.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'One Last Kiss', author: '宇多田光', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/One%20Last%20Kiss%20-%20%E5%AE%87%E5%A4%9A%E7%94%B0%E5%85%89.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '花の塔', author: '酸欠さユり', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E8%8A%B1%E3%81%AE%E5%A1%94%20%28%E8%8A%B1%E4%B9%8B%E5%A1%94%29%20-%20%E9%85%B8%E6%AC%A0%E3%81%95%E3%83%A6%E3%82%8A.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '让风告诉你', author: '花玲、喵☆酱、宴宁、kinsen', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E8%AE%A9%E9%A3%8E%E5%91%8A%E8%AF%89%E4%BD%A0%20-%20%E8%8A%B1%E7%8E%B2%E3%80%81%E5%96%B5%E2%98%86%E9%85%B1%E3%80%81%E5%AE%B4%E5%AE%81%E3%80%81kinsen.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '我不曾忘记', author: '花玲、张安琪、沐霏', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E6%88%91%E4%B8%8D%E6%9B%BE%E5%BF%98%E8%AE%B0%20-%20%E8%8A%B1%E7%8E%B2%E3%80%81%E5%BC%A0%E5%AE%89%E7%90%AA%E3%80%81%E6%B2%90%E9%9C%8F.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '雪见·落入凡尘', author: '麦振鸿', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%BA%A6%E6%8C%AF%E9%B8%BF%20-%20%E9%9B%AA%E8%A7%81%C2%B7%E8%90%BD%E5%85%A5%E5%87%A1%E5%B0%98.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '飞鸟和蝉', author: '任然', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%A3%9E%E9%B8%9F%E5%92%8C%E8%9D%89%20-%20%E4%BB%BB%E7%84%B6.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '恋爱告急', author: '鞠婧祎', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%9E%A0%E5%A9%A7%E7%A5%8E%20-%20%E6%81%8B%E7%88%B1%E5%91%8A%E6%80%A5.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '青丝', author: '时光胶囊', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%9D%92%E4%B8%9D%20-%20%E6%97%B6%E5%85%89%E8%83%B6%E5%9B%8A.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '绿色', author: '陈雪凝', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%99%88%E9%9B%AA%E5%87%9D%20-%20%E7%BB%BF%E8%89%B2.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '九州同', author: '阿地力·阿不力孜、缪青、丁晓逵、牛建党', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%98%BF%E5%9C%B0%E5%8A%9B%C2%B7%E9%98%BF%E4%B8%8D%E5%8A%9B%E5%AD%9C%20_%20%E7%BC%AA%E9%9D%92%20_%20%E4%B8%81%E6%99%93%E9%80%B5%20_%20%E7%89%9B%E5%BB%BA%E5%85%9A%20-%20%E4%B9%9D%E5%B7%9E%E5%90%8C.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '蓄勢 ～GEAR UP～', author: '采风乐坊', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%87%87%E9%A3%8E%E4%B9%90%E5%9D%8A%20-%20%E8%93%84%E5%8B%A2%20%EF%BD%9EGEAR%20UP%EF%BD%9E.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'Way Back Home', author: '邓壬鑫', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E9%82%93%E5%A3%AC%E9%91%AB%20-%20Way%20Back%20Home%EF%BC%88%E4%B8%AD%E6%96%87%E6%B2%BB%E6%84%88%E7%89%88%EF%BC%89.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '无羁', author: '王一博', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E7%8E%8B%E4%B8%80%E5%8D%9A%20-%20%E6%97%A0%E7%BE%81.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'dududu', author: '咬人猫', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E5%92%AC%E4%BA%BA%E7%8C%AB%20-%20dududu.wav', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '起风了', author: '周深', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E5%92%AC%E4%BA%BA%E7%8C%AB%20-%20dududu.wav', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'Rubia', author: '周深', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E5%91%A8%E6%B7%B1%20-%20Rubia.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '恋愛サーキュレーション', author: '花澤香菜', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E6%81%8B%E6%84%9B%E3%82%B5%E3%83%BC%E3%82%AD%E3%83%A5%E3%83%AC%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%20%28%E6%81%8B%E7%88%B1%E5%BE%AA%E7%8E%AF%29%20-%20%E8%8A%B1%E6%BE%A4%E9%A6%99%E8%8F%9C.flac', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '时间煮雨', author: '纯音乐', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E7%BA%AF%E9%9F%B3%E4%B9%90%20-%20%E6%97%B6%E9%97%B4%E7%85%AE%E9%9B%A8%20%28%E9%92%A2%E7%90%B4%E7%89%88%29.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '人类的光', author: '纯音乐', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E7%BA%AF%E9%9F%B3%E4%B9%90%20-%20%E4%BA%BA%E7%B1%BB%E7%9A%84%E5%85%89.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '夏天的风', author: '温岚', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E6%B8%A9%E5%B2%9A%20-%20%E5%A4%8F%E5%A4%A9%E7%9A%84%E9%A3%8E.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: '夏天的风', author: '温岚', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E6%B8%A9%E5%B2%9A%20-%20%E5%A4%8F%E5%A4%A9%E7%9A%84%E9%A3%8E.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' }, { title: 'Lemon', author: '米津玄師', url: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/music/Music/%E6%B8%A9%E5%B2%9A%20-%20%E5%A4%8F%E5%A4%A9%E7%9A%84%E9%A3%8E.mp3', pic: 'https://smms.app/image/fWkU7A6KvbeM5YB' } ] }); demo.init();"},{"title":"电影","date":"2023-09-11T02:12:58.000Z","updated":"2023-09-11T05:14:29.852Z","comments":true,"path":"movies/index.html","permalink":"https://waltyoung.github.io/movies/index.html","excerpt":"","text":"播放器容器 //定义一个变量：videoObject，用来做为视频初始化配置 var videoObject = { container: '.video', //“#”代表容器的ID，“.”或“”代表容器的class video: 'https://waltyoung-music-1317864421.cos.ap-shanghai.myqcloud.com/%E9%B9%BF%E9%B8%A31024.mp4'//视频地址 }; var player = new ckplayer(videoObject);//初始化播放器"},{"title":"","date":"2023-09-11T04:54:43.914Z","updated":"2023-09-11T04:54:13.615Z","comments":true,"path":"movies/ckplayer.js","permalink":"https://waltyoung.github.io/movies/ckplayer.js","excerpt":"","text":"/* * 软件名称：ckplayer * 版本:X3 * 版权：www.ckplayer.com * 开源协议：MIT */ (function (global, factory) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.ckplayer = factory()); }(this, function () { 'use strict'; /* * language * 功能：静态变量,包含播放器用到的默认语言包 * 引入其它语言js后该变量将被替换成新引入的语言包 */ var language={ play:'%E6%92%AD%E6%94%BE', pause:'%E6%9A%82%E5%81%9C', refresh:'%E9%87%8D%E6%92%AD', full:'%E5%85%A8%E5%B1%8F', exitFull:'%E9%80%80%E5%87%BA%E5%85%A8%E5%B1%8F', webFull:'%E9%A1%B5%E9%9D%A2%E5%85%A8%E5%B1%8F', exitWebFull:'%E9%80%80%E5%87%BA%E9%A1%B5%E9%9D%A2%E5%85%A8%E5%B1%8F', theatre:'%E5%89%A7%E5%9C%BA%E6%A8%A1%E5%BC%8F', exitTheatre:'%E9%80%80%E5%87%BA%E5%89%A7%E5%9C%BA%E6%A8%A1%E5%BC%8F', volume:'%E9%9F%B3%E9%87%8F%EF%BC%9A', muted:'%E9%9D%99%E9%9F%B3', exitmuted:'%E6%81%A2%E5%A4%8D%E9%9F%B3%E9%87%8F', seek:'seek%EF%BC%9A', waiting:'%E7%BC%93%E5%86%B2', live:'%E7%9B%B4%E6%92%AD%E4%B8%AD', backLive:'%E8%BF%94%E5%9B%9E%E7%9B%B4%E6%92%AD', lookBack:'%E5%9B%9E%E7%9C%8B%EF%BC%9A', next:'%E4%B8%8B%E4%B8%80%E9%9B%86', screenshot:'%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE', smallwindows:'%E5%B0%8F%E7%AA%97%E5%8F%A3%E6%92%AD%E6%94%BE%E5%8A%9F%E8%83%BD', playbackrate:'%E5%80%8D%E9%80%9F', playbackrateSuffix:'%E5%80%8D', track:'%E5%AD%97%E5%B9%95', noTrack:'%E6%97%A0%E5%AD%97%E5%B9%95', definition:'%E6%B8%85%E6%99%B0%E5%BA%A6', switchTo:'%E5%88%87%E6%8D%A2%E6%88%90%EF%BC%9A', closeTime:'%7Bseconds%7D%E7%A7%92%E5%90%8E%E5%8F%AF%E5%85%B3%E9%97%AD%E5%B9%BF%E5%91%8A', closeAd:'%E5%85%B3%E9%97%AD%E5%B9%BF%E5%91%8A', second:'%E7%A7%92', details:'%E6%9F%A5%E7%9C%8B%E8%AF%A6%E6%83%85', copy:'%E5%A4%8D%E5%88%B6', copySucceeded:'%E5%A4%8D%E5%88%B6%E6%88%90%E5%8A%9F%EF%BC%8C%E5%8F%AF%E8%B4%B4%E7%B2%98%EF%BC%81', smallwindowsOpen:'%E5%B0%8F%E7%AA%97%E5%8F%A3%E5%8A%9F%E8%83%BD%E5%B7%B2%E5%BC%80%E5%90%AF', smallwindowsClose:'%E5%B0%8F%E7%AA%97%E5%8F%A3%E5%8A%9F%E8%83%BD%E5%B7%B2%E5%85%B3%E9%97%AD', screenshotStart:'%E6%88%AA%E5%9B%BE%E4%B8%AD%EF%BC%8C%E8%AF%B7%E7%A8%8D%E5%80%99...', screenshotClose:'%E6%88%AA%E5%9B%BE%E5%8A%9F%E8%83%BD%E5%B7%B2%E5%85%B3%E9%97%AD', loopOpen:'%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE', loopClose:'%E5%B7%B2%E5%85%B3%E9%97%AD%E5%BE%AA%E7%8E%AF%E6%92%AD%E6%94%BE', close:'%E5%85%B3%E9%97%AD', down:'%E4%B8%8B%E8%BD%BD', p50:'50%25', p75:'75%25', p100:'100%25', timeScheduleAdjust:{ prohibit:'%E8%A7%86%E9%A2%91%E7%A6%81%E6%AD%A2%E6%8B%96%E5%8A%A8', prohibitBackOff:'%E8%A7%86%E9%A2%91%E7%A6%81%E6%AD%A2%E9%87%8D%E5%A4%8D%E8%A7%82%E7%9C%8B', prohibitForward:'%E8%A7%86%E9%A2%91%E7%A6%81%E6%AD%A2%E5%BF%AB%E8%BF%9B', prohibitLookBack:'%E8%A7%86%E9%A2%91%E7%A6%81%E6%AD%A2%E6%92%AD%E6%94%BE%E9%83%A8%E5%88%86%E5%86%85%E5%AE%B9', prohibitForwardNotViewed:'%E8%A7%86%E9%A2%91%E7%A6%81%E6%AD%A2%E6%92%AD%E6%94%BE%E6%9C%AA%E8%A7%82%E7%9C%8B%E7%9A%84%E9%83%A8%E5%88%86' }, error:{ noMessage:'%E6%9C%AA%E7%9F%A5%E9%94%99%E8%AF%AF', supportVideoError:'%E8%AF%A5%E6%B5%8F%E8%A7%88%E5%99%A8%E7%89%88%E6%9C%AC%E5%A4%AA%E4%BD%8E%EF%BC%8C%E5%BB%BA%E8%AE%AE%E6%9B%B4%E6%8D%A2%E6%88%90%E5%85%B6%E5%AE%83%E6%B5%8F%E8%A7%88%E5%99%A8', videoTypeError:'%E8%AF%A5%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%8D%E6%94%AF%E6%8C%81%E6%92%AD%E6%94%BE%E8%AF%A5%E8%A7%86%E9%A2%91%EF%BC%8C%E5%BB%BA%E8%AE%AE%E6%9B%B4%E6%8D%A2%E6%88%90%E5%85%B6%E5%AE%83%E6%B5%8F%E8%A7%88%E5%99%A8', loadingFailed:'%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5', emptied:'%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AF', screenshot:'%E8%A7%86%E9%A2%91%E6%88%AA%E5%9B%BE%E5%A4%B1%E8%B4%A5', ajax:'Ajax%E6%95%B0%E6%8D%AE%E8%AF%B7%E6%B1%82%E9%94%99%E8%AF%AF', noVideoContainer:'%E6%9C%AA%E6%89%BE%E5%88%B0%E6%94%BE%E7%BD%AE%E8%A7%86%E9%A2%91%E7%9A%84%E5%AE%B9%E5%99%A8' } }; /* * videoObjectDefault * 功能：静态变量,默认播放配置，当外部传递过来的配置有未包含在varsDefault里的，则使用varsDefault里的配置 */ var videoObjectDefault= { container: '',//视频容器的ID volume: 0.8,//默认音量，范围0-1 poster: '',//封面图片地址 autoplay: false,//是否自动播放 loop: false,//是否需要循环播放 live: false,//是否是直播 rotate:0,//视频旋转角度 zoom:0,//默认缩放比例 ad:null,//广告 backLive:false,//显示返回直播按钮 seek: 0,//默认需要跳转的秒数 next: null,//下一集按钮动作 loaded: '',//加载播放器后调用的函数 plug: '',//使用插件 duration:0,//视频总时间 preview: null,//预览图片对象 prompt: null,//提示点功能 crossOrigin:'',//跨域请求字符 video: null,//视频地址 type:'',//视频类型 playbackrate: 1,//默认倍速 ended:null,//结束显示的内容 webFull:false,//页面全屏按钮事件 theatre:null,//剧场模式 controls:false,//是否显示自带控制栏 rightBar:null,//是否开启右边控制栏 smallWindows:null,//是否启用小窗口模式 smallWindowsDrag:true,//当处于小窗口模式时是否可拖动播放器 screenshot:false,//截图功能是否开启 timeScheduleAdjust:1,//是否可调节播放进度,0不启用，1是启用，2是只能前进（向右拖动），3是只能后退，4是只能前进但能回到第一次拖动时的位置，5是看过的地方可以随意拖动 logo:'',//logo menu:null,//右键菜单 information:{//关于 'Load:':'{loadTime} second', 'Duration:':'{duration} second', 'Size:':'{videoWidth}x{videoHeight}', 'Volume:':'{volume}%', 'Fps:':'{fps}fps', 'Sudio decoded:':'{audioDecodedByteCount} Byte', 'Video decoded:':'{videoDecodedByteCount} Byte' }, track:null,//字幕 title:'',//视频标题 language:'',//语言包文件 barHideTime:1500,//控制栏隐藏时间 playbackrateOpen:true,//是否开启控制栏倍速选项 playbackrateList:[0.75,1,1.25,1.5,2,4],//倍速配置值 cookie:null,//开启cookie功能 domain:null,//指定cookie保存的域 cookiePath:'/',//指定cookie保存路径 documentFocusPause:false,//窗口失去焦点后暂停播放 mouseWheelVolume:2,//是否启用鼠标滚轮调节音量功能，0=不启用，1=启用，2=全屏时才启用 keyVolume:2,//是否启用键盘控制音量调节，0=不启用，1=启用，2=全屏时才启用 errorShow:true//是否显示错误信息 }; function ckplayerEmbed(videoObj){ /* * rightMenu * 功能：全局变量,右键内容 * 初始化设置menu可替换该变量内容 */ var rightMenu=[ { title:'ckplayer', link:'http://www.ckplayer.com' }, { title:'version:X3', underline:true }, { title:'about', click:'aboutShow' } ]; var vars={},varsTemp={};//保存传递过来的videoObject var video=null;//视频播放器对象 var duration=0;//总时间 var mutedState='';//默认静音状态 var recoveryVolume=false;//是否需要在播放时恢复音量 var waited=true;//是否缓冲结束 var paused=true;//默认暂停状态 var loadTime=0;//已加载部分 var seekTime=0;//需要跳转的时间，初次播放以及切换清晰度后会用该变量记录需要seek的时间 var oldTime=0,playTime=0,firstSeekTime=-1,maxSeeTime=0;//oldTime=记录上次播放时间，playTime=当前播放时间，firstSeekTime=记录第一次拖动的时间,maxSeeTime=看过的最大时间 var isChangeDef=true;//是否需要重置清晰度 var playType='';//播放类别，默认=''，是通过api接口播放，='button'则判定是通过点击按钮播放 var msgSetTime=null,tipSetTime=null,mouseSetTime=null;//用于显示提示后自动隐藏的计时器 var adFrontSetTime=null,adPauseSetTime=null;//贴片广告和暂停广告的计时器 var closeTipFun=null;//关闭提示的函数 var closeTipMouseOut=null;//鼠标离开节点时执行的函数 var waitingMessage=true;//显示缓冲提示 var hidePreviewSetTime=null;//隐藏预览图的计时器 var pSliderMouseDown=false;//判断是否在进度条上的滑块上按下 var playbackTime=0;//记录回放时间 var loadedmetadataNum=0;//记录元数据加载成功次数，记录视频播放数量 var screenshotImg=null;//记录最新一张截图 var ad=null;//广告对象 var frontAdPlay=false,pauseAdPlay=false;//贴片广告是否播放，暂停广告是否播放 var barShow=true,rightBarShow=true; var EventTarget=null,newEvent=null,eventTargetList=null;//注册监听 var loadedTrack=false;//默认未加载字幕 var C={};//保存播放器界面上的所有节点 var CT=null,CK=null,CM=null,CV=null;//CT=播放器容器，页面中已存的，CT>CK>CM>CV>video var pugPlayer=null;//插件播放器 var hls=null;//播放hls var loadMeta=true;//第一次加载到元数据 var app='';//平台类型 var nowRotate=0;//当前视频旋转角度 var nowZoom=100;//当前缩放比例 var smallWindowsState=false;//当前是否处理小窗口状态 var isDrag=false;//是否在播放器上按下并且拖动 var ckplayerCookie='ckplayer-player-cookie'; var cookieName='';//cookie名称 var cookieTime=0;//cookie保存时间，单位：秒 var cookieArray=[];//保存当前所有记录 var focusPause=true;//失去焦点前是否是暂停状态 var existenceObj=false;//是否使用源码里已有的dom /* * into * 功能：初始化，调用播放器则首先调用该函数 * @obj=初始化时的配置对象：videoObject */ var into=function(obj){ /* * 如果未传递初始化配置对象，则为player变量增加一个add函数，功能相当于into */ if(isUndefined(obj)){ player.add=player.into=into; return player; } /* * 转码默认语言包 */ language=decodeURIString(language); /* * 检查是否在顶部引入了外部语言包文件，如果引入了，则使用外部语言包替换进language变量 */ if(!isUndefined(window.ckplayerLanguage)){ language=mergeObj(language,window.ckplayerLanguage); } /* * 初始化注册事件函数，该函数的作用是将所有相关的事件都注册进一个变量newEvent * newEvent是提供给播放器外部监听函数使用的，如监听时间player.time(function(t){console.log('已播放：'+t);}); */ eventTarget(); /* * 监听页面标签状态（判断是否失去焦点） */ documentHidden(function(state){ eventTarget('visibilityState',state); }); /* * 判断平台类型,主要是判断是否是iphone类型的平台 */ app=getApp(); /* * 简单复制一下初始化时的默认配置 */ varsTemp={}; for(var key in videoObjectDefault){ varsTemp[key]=videoObjectDefault[key]; } /* * 如果初始化配置是字符串并且是以website:开头或url:开头的，则认为需要请求一个json文件来获取配置 */ if(valType(obj)=='string' && (obj.substr(0,8)=='website:' || obj.substr(0,4)=='url:')){ var ajaxUrl=''; if(obj.substr(0,8)=='website:'){ ajaxUrl=obj.substring(8); } if(obj.substr(0,4)=='url:'){ ajaxUrl=obj.substring(4); } ajax({url:ajaxUrl,success:function(data){ if(data){ return into(data); } else{ showWindowsError(language['error']['ajax']+',url:'+ajaxUrl); return null; } }}); } /* * 如果初始化配置是一个object，则进行下面的操作 */ else if(valType(obj)=='object'){ varsTemp = standardization(varsTemp, obj);//将obj合并到varsTemp对象里 if(!isUndefined(obj['container']) && obj['container']){ CT=$(obj['container']); if(CT){//如果播放容器存在，则调用语言判断函数 return loadLanguage(obj); } else{//如果播放容器不存在，则则等页面加载完成后运行 return bodyReady(obj); } } else{//不存在播放容器配置则等页面加载完成后运行 return bodyReady(obj); } } else{ showWindowsError(language['error']['noVideoContainer']); return null; } }, /* * bodyReady * 功能：页面加载完成后构建播放器 * @obj=初始化时的配置对象 */ bodyReady=function (obj){ documentReady(function(){ if(!isUndefined(obj['container'])){ CT=$(obj['container']); if(CT){//如果播放容器存在，则调用语言判断函数 return loadLanguage(obj); } else{ showWindowsError(language['error']['noVideoContainer']); return null; } } else{//不存在播放容器则重新判断 return ajaxWebsite(obj); } }); return null; }, /* * ajaxWebsite * 功能：页面加载完成后重新初始化 * @obj=初始化时的配置对象 */ ajaxWebsite=function (obj){ if(valType(obj['video'])=='string' && (obj['video'].substr(0,8)=='website:' || obj['video'].substr(0,4)=='url:')){ varsTemp = standardization(varsTemp, obj); var ajaxUrl=''; if(obj['video'].substr(0,8)=='website:'){ ajaxUrl=obj['video'].substring(8); } if(obj['video'].substr(0,4)=='url:'){ ajaxUrl=obj['video'].substring(4); } ajax({url:ajaxUrl,success:function(data){ if(data){ return into(data); } else{ showWindowsError(language['error']['ajax']+',url:'+ajaxUrl); return null; } }}); } else{ showWindowsError(language['error']['noVideoContainer']); return null; } }, /* * loadLanguage * 功能：加载Language * @obj=初始化时的配置对象 */ loadLanguage=function (obj){ vars = standardization(varsTemp, obj); if(vars['language']){ var path=getPath('language')+vars['language']+'.js'; loadJs(path,function(){ if(!isUndefined(window['ckplayerLanguage'])){ language=mergeObj(language,window['ckplayerLanguage']); } return embed(obj); }); } else{ return embed(obj); } }, /* * embed * 功能：构建播放器 * @obj=初始化时的配置对象 */ embed=function (obj){ /* * 判断静音状态 */ mutedState=vars['volume']>0?false:true; if(!isUndefined(CT) && CT!=null){ if(valType(CT)=='htmlarray'){ CT=CT.eq(0); } } else{ return null; } /* * 注册获取fps的函数 */ calculationFps(); /* * 如果video指向一个已存在的video标签对象 */ existenceObj=valType(vars['video'])=='string' && ((vars['video'].substr(0,1)=='.' && vars['video'].indexOf('/')==-1) || vars['video'].substr(0,1)=='#'); /* * 清空容器 */ if(existenceObj){ CK=CT.find('.ckplayer-ckplayer')?CT.find('.ckplayer-ckplayer').eq(0):null; if(CK){ CM=CK.find('.ck-main')?CK.find('.ck-main').eq(0):null; } if(CM){ CV=CM.find('.ck-video')?CM.find('.ck-video').eq(0):null; } } if(!CK || !CM || !CV){ CT.htm(''); /* * 在播放容器里新建一个总的容器 */ CK=createlDiv('ckplayer-ckplayer'); CT.append(CK); /* * 在总容器里再新建一个容器 */ CM=createlDiv('ck-main'); CK.append(CM); /* * 新建一个放置video标签的容器 */ CV=createlDiv('ck-video'); CM.append(CV); } /* * 如果已存在video.则先设置成空 */ if(video){ video.remove(); video=null; } /* * 如果video指向一个已存在的video标签对象，则直接调用该对象 */ if(existenceObj){ video=$(vars['video'])?$(vars['video']).eq(0):null; } /* * 新建一个video标签 */ if(!video){ video = createlVideo(); video.attr('width','100%').attr('height','100%'); CV.append(video); } video.volume=vars['volume']; if(vars['autoplay']){ player.volume(0); player.muted(); recoveryVolume=true; video.attr('autoplay','autoplay'); paused=false; } else{ video.attr('preload','metadata'); } CT.loop=vars['loop']; if(CT.loop){ video.attr('loop','loop'); } if(vars['controls']){ video.controls=true; } else{ video.controls=false; } try{ if(!existenceObj){ video.attr('controlslist','nodownload'); video.attr('x-webkit-airplay','true'); video.attr('x5-video-orientation','portraint'); video.attr('playsinline','true'); video.attr('webkit-playsinline','true'); video.attr('x5-playsinline','true'); } if(vars['crossOrigin']){ video.useCORS=true;//解决跨域 video.crossOrigin=vars['crossOrigin'];//解决跨域 } } catch(event){} /* * 默认设置支持小窗口模式 */ CT.smallWindows=true; /* * 默认设置不显示页面全屏按钮 */ CT.webFull=false; /* * 默认设置不显示剧场模式按钮 */ CT.theatre=false; /* * 加载播放器界面 */ loadFace(); /* * 判断是否需要默认旋转视频 */ if(vars['rotate']>0){ player.rotate(vars['rotate']); } /* * 判断是否需要默认缩放视频 */ if(vars['zoom']>0){ player.zoom(vars['zoom']); } /* * 判断是否支持video标签 */ if(isUndefined(video.canPlayType)){ CT.error={code:5,message:language['error']['supportVideoError']}; eventTarget('error',CT.error);//注册监听error showError(); return player; } /* * 注册视频播放器内部监听，监听到事件后注册给CT使用 */ addAllListener(); /* * 如果需要在视频播放器加载成功后调用相关函数，此时则开始调用 */ if(!isUndefined(vars['loaded'])){ if(valType(vars['loaded'])=='function'){ try{ vars['loaded'](player); } catch(event){} } else if(valType(vars['loaded'])=='string'){ try{ eval(vars['loaded']+ '(player)'); } catch(event){} } } /* * 播放视频 */ if(!existenceObj){ changeVideo(vars['video']); } else{ changeVideo(video.attr('src')); } /* * 返回 播放器 */ return player; }, /* * changeVideo * 功能：初始化视频地址或修改视频地址 */ changeVideo=function (vstr){ var i=0; if(video.attr('src') || video.htm()){ player.pause(); } if(video.attr('src') && !existenceObj){ video.attr('src',''); video.removeAttr('src'); } if(!isUndefined(video.textTracks) && video.textTracks.length>0){ for(i=video.find('track').length-1;i>-1;i--){ video.find('track').eq(i).remove(); } } if(!existenceObj){ video.htm(''); } if(!isUndefined(vars['ad'])){ ad=vars['ad']; } var source=''; if(valType(vstr)=='string'){ if(vstr.substr(0,8)=='website:' || vstr.substr(0,4)=='url:'){ var ajaxUrl=''; if(vstr.substr(0,8)=='website:'){ ajaxUrl=vstr.substring(8); } if(vstr.substr(0,4)=='url:'){ ajaxUrl=vstr.substring(4); } ajax({url:ajaxUrl,success:function(data){ if(data!=null){ vars = standardization(varsTemp, data); changeVideo(vars['video']); } else{ CT.error={code:8,message:language['error']['ajax']}; eventTarget('error',CT.error);//注册监听error showError(); } }}); return; } else{ if(vars['plug'] && !canPlay(vstr)){ plugPlayer(vstr); } else{ if(!existenceObj){ video.attr('src',vstr); } } loadTrack(); } } else if(valType(vstr)=='array'){ for(i=0;i1){ source += ''; } } } } if(source){ video.htm(source); } loadTrack(); } else if(valType(vstr)=='object'){ if(vars['plug']){ plugPlayer(vstr); } else{ CT.error={code:10,message:language['error']['emptied']}; eventTarget('error',CT.error);//注册监听error showError(); } loadTrack(); } if(!isUndefined(video.find('source')) && video.find('source').length>0){ video.find('source').eq(video.find('source').length-1).addListener('error',videoHandler.error); } checkBar(); loadLogo(); if(isChangeDef){ checkDefinition(); } /* * 对cookie进行相关分析 */ if(vars['cookie']){ if(valType(vars['cookie'])=='array' && vars['cookie'].length>=2){ if(vars['cookie'][0] && valType(vars['cookie'][0])=='string'){ cookieName=vars['cookie'][0]; } if(vars['cookie'][1] && valType(vars['cookie'][1])=='number'){ cookieTime=vars['cookie'][1]; } } if(valType(vars['cookie'])=='object' && !isUndefined(vars['cookie']['name'])){ cookieName=vars['cookie']['name']; if(!isUndefined(vars['cookie']['hour']) && valType(vars['cookie']['hour'])=='number'){ cookieTime=vars['cookie']['hour']; } } if(valType(vars['cookie'])=='string'){ cookieName=vars['cookie']; } if(cookieName){ cookieName=cookieName.replace(/[ ]*,[ ]*|[ ]+/g, '').replace(/[ ]*;[ ]*|[ ]+/g, ''); } } if(!isUndefined(vars['seek']) && !seekTime){ if(valType(vars['seek'])=='number' && vars['seek']>0){ seekTime=vars['seek']; } if(valType(vars['seek'])=='string' && vars['seek']=='cookie' && cookieName){ var cke=player.cookie(cookieName); if(cke){ seekTime=cke['time']; } } } }, /* * plugPlayer * 功能：使用插件进行播放 */ plugPlayer=function (url){ switch(vars['plug']){ case 'hls.js': hlsPlayer(url); break; case 'flv.js': flvPlayer(url); break; case 'mpegts.js': mpegtsPlayer(url); break; case 'dash.js': dashPlayer(url); break; default: if(valType(vars['plug'])=='function'){ vars['plug'](video,url); } else{ CT.error={code:10,message:language['error']['emptied']}; eventTarget('error',CT.error);//注册监听error showError(); } break; } }, /* * hlsPlayer * 功能：使用hls.js插件进行播放 */ hlsPlayer=function (url){ var path=getPath('hls.js')+'hls.min.js'; loadJs(path,function(){ if (!isUndefined(Hls) && Hls.isSupported()) { hls = new Hls(); hls.loadSource(url); hls.attachMedia(video); hls.on(Hls.Events.ERROR, function(event, data){ var code=9; var message=language['error']['loadingFailed']; var fatal=data.fatal; if(!isUndefined(data.response)){ if(!isUndefined(data.response.code)){ code=data.response.code; } if(!isUndefined(data.response.text) && data.response.text){ message=data.response.text; } else{ if(!isUndefined(event)){ message=event; } } } CT.error={code:code,message:message}; eventTarget('error',CT.error);//注册监听error if(fatal){ showError(); } }); } else if(canPlay(url)){ video.attr('src',url); } }); }, /* * flvPlayer * 功能：使用flv.js插件进行播放 */ flvPlayer=function (url){ var path=getPath('flv.js')+'flv.min.js'; loadJs(path,function(){ if (typeof(flvjs)!='undefined' && !isUndefined(flvjs) && flvjs.isSupported()) { var config={ type: 'flv', url: url }; if(valType(url)=='object'){ config=url; } if(vars['live']){ config['isLive']=true; } if(pugPlayer){ pugPlayer.pause(); pugPlayer.unload(); pugPlayer.detachMediaElement(); pugPlayer.destroy(); pugPlayer=null; } pugPlayer = flvjs.createPlayer(config); pugPlayer.attachMediaElement(video); pugPlayer.load(); pugPlayer.on(flvjs.Events.METADATA_ARRIVED, function(res){ videoHandler.loadedMetaData(); }); pugPlayer.on(flvjs.Events.ERROR, function(errorType, errorDetail, errorInfo){ CT.error={code:errorInfo['code'],message:errorInfo['msg']}; eventTarget('error',CT.error);//注册监听error showError(); }); } }); }, /* * mpegtsPlayer * 功能：使用mpegts.js插件进行播放 */ mpegtsPlayer=function (url){ var path=getPath('mpegts.js')+'mpegts.js'; loadJs(path,function(){ if (typeof(mpegts)!='undefined' && !isUndefined(mpegts) && mpegts.getFeatureList().mseLivePlayback) { var config={ type: 'mse', url: url }; if(valType(url)=='object'){ config=url; } if(vars['live']){ config['isLive']=true; } if(pugPlayer){ pugPlayer.pause(); pugPlayer.unload(); pugPlayer.detachMediaElement(); pugPlayer.destroy(); pugPlayer=null; } pugPlayer = mpegts.createPlayer(config); pugPlayer.attachMediaElement(video); pugPlayer.load(); pugPlayer.on(mpegts.Events.METADATA_ARRIVED, function(res){ videoHandler.loadedMetaData(); }); pugPlayer.on(mpegts.Events.ERROR, function(errorType, errorDetail, errorInfo){ CT.error={code:errorInfo['code'],message:errorInfo['msg']}; eventTarget('error',CT.error);//注册监听error showError(); }); } }); }, /* * canPlay * 功能：判断是否能支持相关视频格式 */ canPlay=function(vStr,num){ var vTypeArr=[ {vidType:'video/ogg',codType:'theora, vorbis'}, {vidType:'video/mp4',codType:'avc1.4D401E, mp4a.40.2'}, {vidType:'video/mp4',codType:'avc1'}, {vidType:'video/mp4',codType:'hevc'}, {vidType:'video/webm',codType:'vp8.0, vorbis'}, {vidType:'video/webm',codType:'vp9'}, {vidType:'',codType:'application/x-mpegURL'}, {vidType:'',codType:'application/vnd.apple.mpegurl'} ]; var vType={ ogg:vTypeArr[0], mp4:[vTypeArr[1],vTypeArr[2],vTypeArr[3]], webm:[vTypeArr[4],vTypeArr[5]], m3u8:[vTypeArr[6],vTypeArr[7]] }; var arr=[]; var k=''; var supportType=function(obj){ var vType=obj['vidType']; var str=''; if(vType){ str=vType+'; '+ 'codecs=\"' + obj['codType'] + '\"'; } else{ str=obj['codType']; } var sup = video.canPlayType(str); if(sup == '') { sup = 'no'; } return sup; }; var getExtension=function(filepath) { return filepath.replace(/.+\\./, ''); }; if(isUndefined(num)){ if(valType(vStr)=='string'){ if(vars['type']){ for(k in vTypeArr){ if(vTypeArr[k]['vidType']==vars['type']){ arr.push(vTypeArr[k]); } } } else{ if(getExtension(vStr) && getExtension(vStr) in vType){ var temp=vType[getExtension(vStr)]; if(valType(temp)=='array'){ for(var i=0;i0){ for(var i=0;i 0) { player.volume(v+.1 0) { player.volume(v-.1>0?v-=.1:0); } if(event.detail < 0) { player.volume(v+.10){ C['ad']['top']['closeTime'].show(); adFrontCloseTime(); } else{ C['ad']['top']['closeAd'].show(); } } } if(!isUndefined(ad['front']['node']) && ad['front']['node']!=null){ CM.append(ad['front']['node']); player.closeLayer(ad['front']['node']); ad['front']['node']=null; } C['ad']['picture'].htm(''); C['ad']['picture'].hide(); C['ad']['link'].hide(); if(!isUndefined(ad['front']['list'][ad['frontPlayI']])){ var adv=ad['front']['list'][ad['frontPlayI']]; frontAdPlay=true;//贴片广告播放状态 eventTarget('frontAd',adv); if(adv['type']=='picture'){ adPicturePlay(adv); } else if(adv['type']=='node'){ adNode(adv); } else{ C['ad']['link'].attr('data-link',adv['link']); adVideoPlay(adv['file']); } if(!isUndefined(adv['link'])){ C['ad']['bottom']['details'].show(); C['ad']['bottom']['details'].htm(''+language['details']+''); } else{ C['ad']['bottom']['details'].hide(); } } }, /* * adFrontCloseTime * 功能：播放贴片广告时按指定时间后显示关闭广告按钮 */ adFrontCloseTime=function(){ if(!isUndefined(ad['front']['closeSetTime'])){ clearTimeout(ad['front']['closeSetTime']); ad['front']['closeSetTime']=null; } C['ad']['top']['closeTime'].htmReplace('{seconds}',ad['front']['closeTime'],language['closeTime']); ad['front']['closeTime']--; if(ad['front']['closeTime']>0){ ad['front']['closeSetTime']=setTimeout(adFrontCloseTime,1000); } else{ C['ad']['top']['closeAd'].show(); C['ad']['top']['closeTime'].hide(); } }, /* * calculationAdFrontTime * 功能：计算贴片广告倒计时时间以及广告是视频时用于倒计时 */ calculationAdFrontTime=function(t){ if(!isUndefined(t)){ ad['front']['list'][ad['frontPlayI']]['time']=t; } ad['front']['countDown']=0; for(var i=ad['frontPlayI'];i0){ adv['time']--; ad['front']['countDown']--; C['ad']['top']['countDown'].htm(ad['front']['countDown']+language['second']); adFrontSetTime=setTimeout(adFrontCountDown,1000); } else{ adFrontEnded(); } }, /* * adFrontEnded * 功能：贴片广告单个播放完成后进行判断是否需要播放下一个广告还是播放正片 */ adFrontEnded=function(){ if(ad['frontPlayI']0 || h>0){ if(adv['link']){ var a=createlA('',adv['link']); a.append(this); C['ad']['picture'].append(a); } else{ C['ad']['picture'].append(this) } img.unbind(); img.click(function(){ eventTarget('frontAdClick',adv); }); } else{ if(imgloadNum=ad['pausePlayI']){ var adv=ad['pause']['list'][ad['pausePlayI']]; if(!isUndefined(ad['pause']['close']) && ad['pause']['close']){ ad['pauseClose']=createlButton('ck-pause-close'); ad['pauseClose'].click(function(){ C['centerPlay'].show(); C['buffer'].hide(); closePauseAd(); }); } if(!isUndefined(adv['file'])){//图片 var img = null; var imgloadNum=0; var imgLoadHandler=function(){ img = createlImg(adv['file']); C['adPause'].show(); C['adPause'].htm(''); C['adPause'].append(img); img.addListener('load',function(){ var w=this.getWidth(),h=this.getHeight(); if(w>0 || h>0){ C['adPause'].htm(''); if(adv['link']){ var a=createlA('',adv['link']); a.append(this); C['adPause'].append(a); } else{ C['adPause'].append(this) } C['adPause'].css({ 'width':w+'px', 'height':h+'px' }); if(ad['pauseClose']){ C['adPause'].append(ad['pauseClose']); } img.click(function(){ eventTarget('pauseAdClick',adv); }); } else{ if(imgloadNum0){ adPauseSetTime=setTimeout(function(){ ad['pausePlayI']++; if(ad['pausePlayI']>ad['pause']['list'].length-1){ ad['pausePlayI']=0; } adPausePlay(); },adv['time']*1000) } } }, /* * closePauseAd * 功能：关闭暂停广告 */ closePauseAd=function(){ if(adPauseSetTime){ clearTimeout(adPauseSetTime); adPauseSetTime=null; } C['adPause'].hide(); if(!isUndefined(ad) && !isUndefined(ad['pauseClose']) && ad['pauseClose']!=null){ ad['pauseClose'].remove(); ad['pauseClose']=null; } if(!isUndefined(ad) && !isUndefined(ad['pause']) && !isUndefined(ad['pause']['node']) && ad['pause']['node']){ ad['pause']['node'].unbind(); player.closeLayer(ad['pause']['node']); eventTarget('pauseAdClose'); } }; /* * player * 功能:开放接口,向外部提供播放器的交互功能列表，包含获取，执行，监听这三种功能 */ var player={ /* * width * 功能：获取或设置播放器宽度 * 这是一个动态的值，会随着全屏切换或播放器本身尺寸变化而变化 * @value，支持数字，字符，当存在@value时则设置播放器宽度，@value为空时则获取播放器宽度 */ width:function(value){ if(!isUndefined(value)){ if(valType(value)=='number'){ value+='px'; } CT.css({'width':value}); checkVideoRotate(); } return CK.getWidth(); }, /* * height * 功能：获取或设置播放器显示高度 * 这是一个动态的值，会随着全屏切换或播放器本身尺寸变化而变化 * @value，支持数字，字符，当存在@value时则设置播放器高度，@value为空时则获取播放器高度 */ height:function(value){ if(!isUndefined(value)){ if(valType(value)=='number'){ value+='px'; } CT.css({'height':value}); checkVideoRotate(); } return CK.getHeight(); }, /* * videoWidth * 功能：获取视频本身的宽度，这是一个固定值 */ videoWidth:function(){ if(video){ return video.videoWidth; } return null; }, /* * videoHeight * 功能：获取视频本身的高度，这是一个固定值 */ videoHeight:function(){ if(video){ return video.videoHeight; } return null; }, /* * height * 功能：获取或设置播放器显示高度 * 这是一个动态的值，会随着全屏切换或播放器本身尺寸变化而变化 * @value，支持数字，字符，当存在@value时则设置播放器高度，@value为空时则获取播放器高度 */ zoom:function(fn){ if(!isUndefined(fn)){ if(valType(fn)=='function'){ newEvent.addEventListener('zoom',fn); } if(valType(fn)=='number'){ var arr=[C['topBar']['zoomEle']['zoom50'],C['topBar']['zoomEle']['zoom75'],C['topBar']['zoomEle']['zoom100']]; for(var i=0;ifn && fn>0){ rot=arr[fn]; } else{ if(arr.indexOf(fn)>-1){ rot=fn; } } if(rot!=nowRotate){ eventTarget('rotate',rot); nowRotate=rot; checkVideoRotate();//调整视频尺寸 } } } }, /* * vars * 提供给播放器外部使用 * 修改vars，动态切换视频地址 * @obj为新的播放配置对象 */ vars:function(obj,val){ if(isUndefined(obj)){ return; } if(valType(obj)=='string' && !isUndefined(val)){ var temp={}; temp[obj]=val; obj=temp; } var isChange=false; for(var k in obj){ if(k in vars && obj[k]!=vars[k]){ isChange=true; break; } } if(isChange){ vars = standardization(vars, obj); } if(!isUndefined(obj['video'])){ isChangeDef=true; changeVideo(vars['video']); } if(!isUndefined(obj['title'])){ C['topBar']['titleEle'].htm(obj['title']); } }, /* * 提供给播放器外部使用 * 功能：监听视频准备加载 */ loadstart:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('loadstart',fn); } }, /* * 提供给播放器外部使用 * 功能：监听视频加载 */ loadeddata:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('loadeddata',fn); } }, /* * 提供给播放器外部使用 * 功能：监听视频元数据加载成功 */ loadedMetaData:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('loadedMetaData',fn); } }, /* * 提供给播放器外部使用 * 功能：监听视频可以播放 */ canplay:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('canplay',fn); } }, /* * 提供给播放器外部使用 * 功能：执行播放操作/监听播放 * @fn为函数时则监听视频播放，@fn为空时，则控制视频播放 */ play:function(fn){ if(valType(fn)=='object'){ if(fn['target']==C['bar']['playAndPause']['play'] || fn['target']==C['bar']['playAndPause']['refresh']){ playType='button'; } } if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('play',fn); } else{ if(loadedmetadataNum>0 && video){ try{video.play();}catch(event){console.error(event)} } } return player; }, /* * puase * 功能：执行暂停操作/监听暂停 * @fn为函数时则监听视频暂停，@fn为空时，则控制视频暂停 */ pause:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('pause',fn); } else{ if(loadedmetadataNum>0 && video){ try{video.pause();}catch(event){console.error(event)} } } return player; }, /* * playOrPause * 功能：在播放和暂停动作之间进行切换 */ playOrPause:function(){ if(paused){ player.play(); } else{ player.pause(); } return player; }, /* * volume * 功能：调节和监听以及获取音量 * @fn为函数时，则进行音量变化的监听，@fn为数字时，则进行音量调节，@fn为空时，则获取当前音量 */ volume:function(fn){ if(!isUndefined(fn)){ if(valType(fn)=='function'){ newEvent.addEventListener('volume', fn); } else if(valType(fn)=='number' && video){ if(fn1)fn=1; if(video.muted){ video.volume=fn*.5; } video.volume=fn; } } else if(video){ return video.volume; } return player; }, /* * muted * 功能：执行静音操作/监听静音 * @fn为函数时则监听视频静音，@fn为空时，则控制视频静音 */ muted:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('muted', fn); } else if(video){ video.muted=true; } return player; }, /* * exitMuted * 功能：执行取消静音操作 */ exitMuted:function(){ if(video){ video.muted=false; if(video.volume==0){ player.volume(vars['volume']>0?vars['volume']:.8); } } return player; }, /* * time * 功能：获取当前播放时间/监听播放时间 * @fn为函数时监听当前播放时间，为空时获取当前播放时间 */ time:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('time',fn); } else if(video){ return video.currentTime || 0; } }, /* * seek * 功能：监听跳转/执行跳转操作 * @fn为函数时则监听视频跳转动作，@fn为数字时执行跳转操作 */ seek:function(fn){ if(!isUndefined(fn)){ if(valType(fn)=='function'){ newEvent.addEventListener('seek',fn); } if(valType(fn)=='number' && video){ switch(vars['timeScheduleAdjust']){ case 0://禁止拖动 message(language['timeScheduleAdjust']['prohibit']); return; break; case 1://可以拖动 break; case 2://只能前进（向右拖动 if(fnoldTime){ message(language['timeScheduleAdjust']['prohibitForward']); return; } break; case 4://只能前进但能回到第一次拖动时的位置 if(fnmaxSeeTime){ waitingMessage=false; video.currentTime=maxSeeTime; message(language['timeScheduleAdjust']['prohibitForwardNotViewed']); return; } break; } pSliderMouseDown=false; video.currentTime=fn; } } return player; }, /* * buffer * 功能：监听视频缓冲 * @fn为监听执行的函数 */ buffer:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('buffer',fn); } return player; }, /* * ended * 功能：监听视频播放结束 * @fn为监听执行的函数 */ ended:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('ended',fn); } return player; }, /* * 提供给播放器外部使用 * 功能：监听点击下一集按钮的动作 */ next:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('next',fn); } return player; }, /* * error * 功能，监听播放器在加载视频过程和播放视频过程中出现的错误 * @fn为监听执行的函数 */ error:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('error',fn); } return player; }, /* * emptied * 功能，监听播放器播放的视频文件发生故障并且文件突然不可用时 * @fn为监听执行的函数 */ emptied:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('emptied',fn); } return player; }, /* * duration * 功能：获取视频总时间/监听视频总时间 * @fn为函数时执行监听视频总时间，为空时获取视频总时间 */ duration:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('duration',fn); } else{ return duration || 0; } }, /* * playbackRate * 功能：监听或返回视频播放速度 * @fn为函数时执行监听视频播放速度，为数字时切换播放速度，为空时获取视频播放速度 */ playbackRate:function(fn){ if(!isUndefined(fn)){ if(valType(fn)=='function'){ newEvent.addEventListener('playbackRate',fn); } else if(valType(fn)=='number' && video){ video.playbackRate=fn; CT.playbackRate=fn; eventTarget('playbackRate',fn); changePlaybackrateVal(fn); } } else{ return video.playbackRate; } }, /* * track * 功能：监听或返回视频的字幕 * @fn为函数时执行监听视频字幕，为数字时切换字幕，为空时获取字幕 */ track:function(fn){ if(!isUndefined(fn)){ if(valType(fn)=='function'){ newEvent.addEventListener('track',fn); } else if(valType(fn)=='number' && video){ var track=null; if(!isUndefined(video.textTracks)){ track=video.textTracks; } if(track && valType(track)=='texttracklist'){ var arr=vars['track']; for(var i=track.length-1;i>-1;i--){ video.find('track').eq(i).remove(); } for(var i=0;i0){ time-=num; } else{ time=0; } player.seek(time); return player; }, /* * fastNext * 功能：快进 * @num为数字时快进指定秒数，为空时快进20秒 */ fastNext:function(num){ if(duration==0) return; if(isUndefined(num) || valType(num)!='number'){ num=20; } var time=player.time(); if(time+num0){ ele=temp.eq(0); } } } if(!isUndefined(ele) && valType(ele)=='htmlobject'){ if(!isUndefined(ele.captureParentNode)){ var eleP=ele.captureParentNode; if (ele.nextElement) { try { eleP.insertBefore(ele, ele.nextElement); } catch (event) { eleP.append(ele); } } else if (ele.prevElement) { try { eleP.insertAfter(ele, ele.prevElement); } catch (event) { eleP.append(ele); } } else { eleP.append(ele); } ele.css({'display':ele.cssDisplay}); } else{ ele.remove(); } if(!isUndefined(ele.cssDisplay)){ ele.css({ 'display':ele.cssDisplay, 'position':ele.cssPosition }); } } return player; }, /* * message * 在播放器内部显示一条提示信息 */ message:function(str){ message(str); return player; }, /* * closeFrontAd * 功能：关闭贴片广告 */ closeFrontAd:function(){ if(frontAdPlay && !isUndefined(ad) && !isUndefined(ad['front']) && !isUndefined(ad['front']['list'])){ ad['frontPlayI']=ad['front']['list'].length-1; adFrontEnded(); clearAdFrontSetTime(); } return player; }, /* * addListener * 功能：监听功能 */ addListener:function(name,fn){ newEvent.addEventListener(name,fn); }, /* * removeListener * 功能：监听功能 */ removeListener:function(name,fn){ newEvent.removeEventListener(name,fn); }, /* * bar * 功能：显示/关闭底部控制栏 */ bar:function(bool){ barShow=bool; if(bool){ C['bar'].show(); } else{ C['bar'].hide(); } }, /* * rightBar * 功能：显示/关闭右边控制栏 */ rightBar:function(bool){ rightBarShow=bool; if(bool){ C['rightBar'].show(); } else{ C['rightBar'].hide(); } }, /* * mouseActive * 功能，监听鼠标是否经过播放器 */ mouseActive:function(fn){ if(!isUndefined(fn) && valType(fn)=='function'){ newEvent.addEventListener('mouseActive',fn); } return this; }, /* * cookie * 功能，读取cookie */ cookie:function(name){ if(name=='delete'){ cookie(ckplayerCookie,'delete',vars['domain']); return null; } if(!isUndefined(name) && name){ name=name.replace(/[ ]*,[ ]*|[ ]+/g, '').replace(/[ ]*;[ ]*|[ ]+/g, ''); } var cStr=cookie(ckplayerCookie); if(cStr){ var arr=stringToArray(cStr); var tempArr=[]; var cTime=parseInt(Date.now()*0.001); for(i=0;icTime){ tempArr.push(arr[i]); } } arr=tempArr; if(arr.length>0){ cookie(ckplayerCookie,'delete',vars['domain'],vars['cookiePath']); cookie(ckplayerCookie,arrayToString(arr),vars['domain'],vars['cookiePath']); for(var i=0;iC['bar'].getHeight()){ h+=(getBarHeight()-C['bar'].getHeight()); } C['bar']['track']['bgbox'].attr('style',''); C['bar']['track']['bgbox'].css({ 'width':w+'px', 'height':(h+2)+'px', 'left':-(w-bw)*0.5+'px' }); C['bar']['track']['button'].mouseover(function(){ w=C['bar']['track']['bg'].getWidth(); bw=C['bar']['track']['button'].getWidth(); C['bar']['track']['bgbox'].css({ 'left':-(w-bw)*0.5+'px' }); }); changeTrackVal(pbr); }, /* * trackClick * 功能：选择字幕 */ trackClick=function(e){ C['bar']['track']['bgbox'].hide(); setTimeout(function(){C['bar']['track']['bgbox'].removeCss('display');},300); message(language['switchTo']+$(this).attr('data-title')); player.track(parseFloat($(this).attr('data-i'))); }, /* * changeTrackVal * 功能：根据字幕检查 */ changeTrackVal=function(num){ C['bar']['track']['bg'].find('button').each(function(index,ele){ var i=parseInt(ele.attr('data-i')); if(num==i){ C['bar']['track']['button'].htm(ele.attr('data-title')); if(i>-1){ CT.track=vars['track'][i]; eventTarget('track',vars['track'][i]); } else{ CT.track=null; eventTarget('track',null); } ele.addClass('ck-list-p-focus'); } else{ ele.removeClass('ck-list-p-focus'); } }); }, /* * checkDefinition * 功能：初始化或重置清晰度组件内容 */ checkDefinition=function(){ var pi=-1; var videoUrl=video['currentSrc']; if(!isUndefined(C['bar']['definition']['bg'])){ C['bar']['definition']['bgbox'].htm(''); C['bar']['definition']['bgbox'].attr('style',''); C['bar']['definition']['button'].htm(language['definition']); } if(valType(vars['video'])=='array'){ var arr=vars['video']; C['bar']['definition']['bg']=createlDiv('ck-list-bg'); C['bar']['definition']['bgbox'].append(C['bar']['definition']['bg']); C['bar']['definition']['bg']['p']=[]; for(var i=arr.length-1;i>-1;i--){ var pTemp=createlButton('ck-list-p',arr[i][2]); pTemp.attr('data-i',i).attr('data-video',arr[i][0]).attr('data-type',arr[i][1]).attr('data-title',arr[i][2]); C['bar']['definition']['bg']['p'].push(pTemp); C['bar']['definition']['bg'].append(pTemp); if(videoUrl && videoUrl.indexOf(arr[i][0])>-1){ pi=i; } pTemp.click(definitionClick); } C['bar']['definition'].show(); C['bar']['definition']['bgbox'].show(); var w=C['bar']['definition']['bg'].getWidth(),h=C['bar']['definition']['bg'].getHeight(); var bw=C['bar']['definition']['button'].getWidth(); C['bar']['definition']['bg'].css({'width':w+10+'px'}); w=C['bar']['definition']['bg'].getWidth(); if(getBarHeight()>C['bar'].getHeight()){ h+=(getBarHeight()-C['bar'].getHeight()); } C['bar']['definition']['bgbox'].attr('style',''); C['bar']['definition']['bgbox'].css({ 'width':w+'px', 'height':(h+2)+'px', 'left':-(w-bw)*0.5+'px' }); C['bar']['definition']['button'].mouseover(function(){ w=C['bar']['definition']['bg'].getWidth(); bw=C['bar']['definition']['button'].getWidth(); C['bar']['definition']['bgbox'].css({ 'left':-(w-bw)*0.5+'px' }); }); } if(pi>-1){ C['bar']['definition']['bg'].find('button').each(function(index,ele){ var i=parseInt(ele.attr('data-i')); if(pi==i){ ele.addClass('ck-list-p-focus'); } else{ ele.removeClass('ck-list-p-focus'); } }); } }, /* * definitionClick * 功能：选择清晰度 */ definitionClick=function(e){ C['bar']['definition']['bgbox'].hide(); setTimeout(function(){ C['bar']['definition']['bgbox'].removeCss('display'); },300); changeDefinition(parseInt($(this).attr('data-i'))); }, /* * changeDefinition * 功能：检查清晰度 */ changeDefinition=function(num){ C['bar']['definition']['bg'].find('button').each(function(index,ele){ var i=parseInt(ele.attr('data-i')); if(num==i){ if(!isUndefined(video.textTracks) && video.textTracks.length>0){ for(var y=video.find('track').length-1;y>-1;y--){ video.find('track').eq(y).remove(); } } seekTime=player.time(); video.attr('autoplay','autoplay'); changeVideo(ele.attr('data-video')); message(language['switchTo']+ele.htm()); C['bar']['definition']['button'].htm(ele.htm()); ele.addClass('ck-list-p-focus'); eventTarget('definition',{id:i,video:ele.attr('data-video'),title:ele.attr('data-title')}); } else{ ele.removeClass('ck-list-p-focus'); } }); }, /* * deletePrompt * 功能：删除关键点 */ deletePrompt=function(){ var i=0; if(!isUndefined(C['prompt']) && valType(C['prompt'])=='array'){ for(i=C['prompt'].length;i>-1;i--){ if(!isUndefined(C['prompt'][i])){ C['prompt'][i].remove(); } } C['prompt']=null; } C['prompt']=[]; }, /* * changePrompt * 功能：构建关键点 */ changePrompt=function(){ deletePrompt(); for(var i=0;ickH){ if(vH / ckW > vW / ckH) { CV.css({ 'height':nowZoom+'%', 'width':ckH+'px' }); } else { CV.css({ 'width':nowZoom+'%', 'height':ckW+'px' }); } return; } if(vH= ckW / ckH) { CV.css({ 'width':nowZoom+'%', 'height':ckW+'px' }); } else { CV.css({ 'height':nowZoom+'%', 'width':ckH+'px' }); } } return; } if(vH>=ckW && vW=ckH && vHC['bar'].getHeight()){ top-=(getBarHeight()-C['bar'].getHeight()); } if(w>ew){ left=offset['left']-ckOffset['left']-(w-ew)*.5; } else{ left=offset['left']-ckOffset['left']+(ew-w)*.5; } if(align=='left'){ left=offset['left']-ckOffset['left']-w; top=offset['top']-ckOffset['top']; } if(!isUndefined(cl)){ left=cl['x']-ckOffset['left']-w*.5; } if(leftCM.getHeight()-h){ top=CM.getHeight()-h; } C['tip'].css({ 'left':left+'px', 'top':top-parseInt(C['tip'].css('margin-bottom'))+'px' }); }, /* * progressDragX * 功能：制作进度调节框事件 */ progressDragX=function(){ var bg=C['bar']['pbox']['bg'], play=C['bar']['pbox']['play'], slider=C['bar']['pbox']['slider'], mouseLine=C['bar']['pbox']['mouseLine']; slider.unbind(); bg.unbind(); var pos = 0, posRecord = 0; var doc=$(document); var sliderDownTime=0; var sliderMouseDown = function(e) { e.preventDefault && e.preventDefault(); if(!vars['timeScheduleAdjust']){//禁止拖动 return; } e = e || window.event; var eleOffset = slider.offset(),bgOffset=bg.offset(),client = getClient(e); pSliderMouseDown=true; posRecord = client['x']; //供比较 var left = eleOffset['left']-bgOffset['left']; sliderDownTime=left*duration/(bg.getWidth()-slider.getWidth()); slider.removeListener('mousedown', sliderMouseDown); slider.removeListener('touchstart', sliderMouseDown); doc.mousemove(docMouseMove); doc.mouseup(docMouseUp); slider.touchmove(docMouseMove); slider.touchend(docMouseUp); noScrolling(true); }; var docMouseMove = function(e) { e = e || window.event; var eleOffset = slider.offset(),bgOffset=bg.offset(),client = getClient(e); pSliderMouseDown=true; pos = posRecord - client['x']; posRecord = client['x']; var left = eleOffset['left'] - pos-bgOffset['left']; if(leftbg.getWidth()-slider.getWidth()){ left=bg.getWidth()-slider.getWidth(); } C['bar']['pbox'].addClass('ck-bar-progress-slider-move'); //预览时间 var time=''; if(!vars['live']){ time=left*duration/(bg.getWidth()-slider.getWidth()); switch(vars['timeScheduleAdjust']){ case 2://只能前进（向右拖动 if(timesliderDownTime){ left=-1000; message(language['timeScheduleAdjust']['prohibitForward']); return; } break; case 4://只能前进但能回到第一次拖动时的位置 if(timemaxSeeTime){ left=-1000; player.seek(maxSeeTime); message(language['timeScheduleAdjust']['prohibitForwardNotViewed']); return; } break; } time=formatSeconds(time); } else{ time=formatLiveTime(left*getLiveTime()/(bg.getWidth()-slider.getWidth())); } tip(slider,time); if(left>=0){ slider.css({ 'left': left + 'px' }); play.css({ 'width': left+ slider.getWidth()*.5+ 'px' }); } else{ pSliderMouseDown=false; } }; var docMouseUp = function() { noScrolling(); doc.removeListener('mousemove', docMouseMove); doc.removeListener('mouseup', docMouseUp); slider.removeListener('touchmove', docMouseMove); slider.removeListener('touchend', docMouseUp); slider.mousedown(sliderMouseDown); slider.touchstart(sliderMouseDown); if(!vars['live']){ var time=play.getWidth()*duration/(bg.getWidth()-slider.getWidth()*.5); if(time>duration){ time=duration; } seekTime=0; player.seek(time); } else{ var playbackTime=parseInt(vars['live']+play.getWidth()*getLiveTime()/(bg.getWidth()-slider.getWidth()*.5)); eventTarget('playback',{time:playbackTime,date:date('Y-m-d H:i:s',playbackTime)}); eventTarget('seek',{time:playbackTime,state:'seeking',date:date('Y-m-d H:i:s',playbackTime)}); } C['bar']['pbox'].removeClass('ck-bar-progress-slider-move'); if(isMouseLeave){ tip(); } }; var isMouseLeave=true;//默认鼠标离开了进度按钮上 var sliderMouseOver=function(){ var time=''; if(!vars['live']){ time=formatSeconds(parseInt(slider.css('left'))*duration/(bg.getWidth()-slider.getWidth())); } else{ time=language['live']; } isMouseLeave=false; tip(slider,time); }; var sliderMouseLeave=function(){ isMouseLeave=true; }; slider.mousedown(sliderMouseDown); slider.mouseover(sliderMouseOver); slider.mouseleave(sliderMouseLeave); slider.touchstart(sliderMouseDown); var bgMouseDown=function(e){ e = e || window.event; var client = getClient(e); var bgOffset=bg.offset(); var w=client['x']-bgOffset['left']; if(CT.full){ w+=CK.offset()['left']; } if(!vars['live']){ var time=duration*w/bg.getWidth(); switch(vars['timeScheduleAdjust']){ case 0://禁止拖动 message(language['timeScheduleAdjust']['prohibit']); return; break; case 2://只能前进（向右拖动 if(timeoldTime){ message(language['timeScheduleAdjust']['prohibitForward']); return; } break; case 4://只能前进但能回到第一次拖动时的位置 if(timemaxSeeTime){ message(language['timeScheduleAdjust']['prohibitForwardNotViewed']); return; } break; } seekTime=0; player.seek(time); } else{ var playbackTime=parseInt(vars['live']+getLiveTime()*w/bg.getWidth()); eventTarget('playback',{time:playbackTime,date:date('Y-m-d H:i:s',playbackTime)}); eventTarget('seek',{time:playbackTime,state:'seeking',date:date('Y-m-d H:i:s',playbackTime)}); } if(w>bg.getWidth()-slider.getWidth()*.5){ w=bg.getWidth()-slider.getWidth()*.5 } if(w0){ var bufferEnd = video.buffered.end(len-1); if(loadTime= 1000) { last += offset; appendFps(fps); fps = 0; } requestAnimationFrame(step); }; var appendFps = function(fps) { if(fps!=CT.fps){ CT.fps=fps; replaceInformation('fps',fps); eventTarget('fps',fps); } }; if(isUndefined(CT.fps)){ CT.fps=0; } step(); }, /* * getElement * 功能：获取一个外部节点 */ getElement=function(content){ var ele=$(content); if(isUndefined(ele)) return; if(valType(ele)=='htmlarray'){ ele=ele[0]; } if(isUndefined(ele.captureParentNode)){ ele.captureParentNode = ele.parentNode; ele.prevElement=ele.prev(); ele.nextElement=ele.next(); } return ele; }, /* * $ * 功能：根据ID或className或节点节点名称获取对象 */ $=function(obj, eL) { var parent = null; if (document) { parent = document; } if (!isUndefined(eL)) { parent = eL; } var res = []; if (obj) { if (valType(obj) == 'htmlobject' || valType(obj)=='object') { res = obj; if (!isUndefined(res.ckplayer)) { return res; } } else if (valType(obj) == 'string' && obj!='') { switch (obj.substr(0, 1)) { case '.': obj = obj.substr(1, obj.length); if (parent.getElementsByClassName) { res = parent.getElementsByClassName(obj); if (!res.length) { return null; } } else if (!parent && document.getElementsByClassName) { res = document.getElementsByClassName(obj); if (!res.length) { return null; } } else { var reg = new RegExp(' ' + obj + ' ', 'i'); var ele = null; if (parent.getElementsByTagName) { ele = parent.getElementsByTagName('*'); } else { ele = document.getElementsByTagName('*'); } for (var i = 0; i < ele.length; i++) { if (reg.test(' ' + ele[i].className + ' ')) { res.push(ele[i]); } } } if (res) { if (res.length === 0) { res = null; } } break; case '#': obj = obj.substr(1, obj.length); if (parent.getElementById) { res = parent.getElementById(obj); } else { res=document.getElementById(obj); } break; default: var reg = new RegExp(' ' + obj + ' ', 'i'); if (parent.getElementsByTagName) { res = parent.getElementsByTagName(obj); } else { res = document.getElementsByTagName(obj); } if (res) { if (obj == 'body' || obj == 'document' || obj == 'html') { res = res[0]; } else if (res.length === 0) { res = null; } } else { res = null; } break; } } else { res = obj; } } else { res = document; } if (res) { if (valType(res) == 'htmlobject' || valType(res) == 'object' || valType(res) == 'document') { res.ckplayer = 'Thanks for using'; /* * find * 功能：在当前节点中查找指定节点 */ res.find = function(obj) { return $(obj, this); }; /* * attr * 功能：修改或获取节点的属性值 * @key不能为空，指属性名称，$value不为空则设置属性值，为空则获取属性值 */ res.attr = function(key, value) { if (isUndefined(value)) { return this.getAttribute(key); } else { this.setAttribute(key, value); return this; } }; /* * removeAtt * 功能：删除节点的属性值 * @key不能为空，指属性名称 */ res.removeAttr = function(key) { this.removeAttribute(key); return this; }; /* * css * 功能：修改或获取节点的样式样式 * @key不能为空，指属性名称，$value不为空则设置属性值，为空则获取属性值 */ res.css = function(key, value) { // 拆解字符串并将第二单词首字母大写 var keyNew = function(str) { // 当属性名有横杠时 if (str.indexOf('-') != -1) { var arr = str.split('-'); var a = arr[0]; var b = '', c = ''; if (arr.length > 1) { b = arr[1].substr(0, 1).toLocaleUpperCase() + arr[1].substr(1, arr[1].length - 1); } if (arr.length > 2) { b = arr[2].substr(0, 1).toLocaleUpperCase() + arr[2].substr(1, arr[2].length - 1); } return a + b + c; } // 没有横杠就不进行字符串拆解 return str; }; if (isUndefined(value)){ if (!isUndefined(key) && valType(key) == 'string') { if (this.currentStyle) { return this.currentStyle[key]; } else { return document.defaultView.getComputedStyle(this, null)[key]; } } if (isUndefined(key)) { if (this.currentStyle) { return this.currentStyle; } else { return document.defaultView.getComputedStyle(this, null); } } } // 当传进来的参数key不是一个对象，给节点添加css样式 if (valType(key) != 'object') { var newKey = keyNew(key); if (this.length > 1) { // 如果this有多个值，那给每个节点都添加样式 for (var i = 0; i < this.length; i++) { this[i].style[newKey] = value; } } else { this.style[newKey] = value; } } else { //如果第一个值是一个对象，遍历这个对象，并将属性名传进函数进行拆解 for (var item in key) { var objKey = keyNew(item); if (valType(this) == 'htmlarray') { for (var i = 0; i < this.length; i++) { this[i].style[objKey] = key[item]; } } else { this.style[objKey] = key[item]; } } } return this; }; res.hasClass = function(cName) { if (isUndefined(cName)) return false; var reg = new RegExp('(\\\\s|^)' + cName + '(\\\\s|$)'); if (this.className && this.className.match(reg)) { return true; } return false; }; res.addClass = function(cName) { if (!this.hasClass(cName)) { if (this.className && this.className.substr(this.className.length - 1, 1) != ' ') { this.className += ' '; } this.className += cName; }; return this; }; res.removeClass = function(cName) { if (this.hasClass(cName)) { this.className = this.className.replace(new RegExp('(\\\\s|^)' + cName + '(\\\\s|$)'), ' '); if (this.className.substr(this.className.length - 1, 1) == ' ') { this.className = this.className.substr(0, this.className.length - 1); } if (!this.className) { this.removeAttribute('class'); } }; return this; }; res.searchClass = function(cName) { var arr = this.className.split(' '); for (var i = 0; i < arr.length; i++) { if (arr[i].substr(0, cName.length) == cName) { return arr[i]; } } return this; }; res.removeCss=function(cName){ var cs=this.attr('style'); if(cs){ var arr=cs.split(';'); var obj={}; for(var i=0;i"},{"title":"","date":"2023-09-11T05:03:11.191Z","updated":"2023-09-11T05:03:11.187Z","comments":true,"path":"movies/ckplayer.css","permalink":"https://waltyoung.github.io/movies/ckplayer.css","excerpt":"","text":".ckplayer-error{ position: fixed; z-index: 9999999; left: 10px; bottom: 10px; width: auto; height: 38px; line-height: 38px; padding: 0 .85rem; background: rgb(0,0,0,.9); border-radius: .25rem; color: #FFF; font-size: 14px; white-space: nowrap; } .ckplayer-ckplayer{ width: 100%; height: 100%; float: left; background: #000; overflow: hidden; } .ckplayer-ckplayer .ck-main.ck-nocursor{ cursor: none; } .ckplayer-ckplayer-smallwindow{ position: fixed; z-index: 9999999; width: 420px; max-width: 100%; height: 266px; right: 10px; bottom: 10px; } .ckplayer-ckplayer .ck-main{ width: 100%; height: 100%; overflow: hidden; background: #000; position: relative; } .ckplayer-ckplayer .ck-main .ck-video{ width: 100%; height: 100%; overflow: hidden; position:absolute; z-index: 1; top: 0; left: 0; right: 0; bottom: 0; margin: auto; } .ckplayer-ckplayer .ck-main .ck-video video,.ckplayer-ckplayer .ck-main .ck-video canvas{ width: 100%; height: 100%; } .ckplayer-ckplayer .ck-main .ck-error{ width: 100%; height: 80px; line-height: 35px; text-align: center; color: #FFF; position:absolute; z-index: 70; top: 0; left: 0; right: 0; bottom: 0; margin: auto; overflow: hidden; } .ckplayer-ckplayer .ck-main .ck-logo{ position:absolute; right: 20px; top:20px; z-index: 400; } .ckplayer-ckplayer .ck-main .ck-loading{ position:absolute; top:0; bottom: 0; left: 0; right: 0; margin: auto; z-index: 80; width: 80px; height: 80px; border-radius: 50%; background: url(images/loading.png) no-repeat center center; background-size: 100% 100%; animation: ck-Circle 1.5s linear infinite; -webkit-animation: ck-Circle 1.5s linear infinite } .ckplayer-ckplayer .ck-main .ck-center-play{ background: url(images/play.png) no-repeat 70% center; background-size:60% 60%; border: 8px solid rgba(255,255,255,.3); border-radius: 50%; box-sizing:border-box; -moz-box-sizing:border-box; /* Firefox */ -webkit-box-sizing:border-box; /* Safari */ width: 80px; height: 80px; position: absolute; display: none; z-index: 90; top: 0; left: 0; right: 0; bottom: 0; margin: auto; cursor: pointer; transition: .2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-center-play{ width: 100px; height: 100px; } .ckplayer-ckplayer .ck-main .ck-center-play:hover{ width: 100px; height: 100px; transition: 0.2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-center-play:hover{ width: 120px; height: 120px; } .ckplayer-ckplayer .ck-main .ck-buffer{ background: url(images/buffer.png) no-repeat center center; background-size:100% 100%; border-radius: 50%; width: 60px; height: 60px; position: absolute; z-index: 100; top:0; bottom: 0; left: 0; right: 0; margin: auto; display: none; animation: ck-Circle 1s linear infinite; -webkit-animation: ck-Circle 1s linear infinite } .ckplayer-ckplayer .ck-main .ck-message{ position: absolute; z-index: 240; left:5px; bottom: 78px; padding: 0 1rem; line-height: 30px; height: 30px; width: auto; min-width: 1px; border-radius: .25rem; background: rgba(0,0,0,.6); font-size: 14px; color: #FFF; display: none; white-space:nowrap; } .ckplayer-ckplayer .ck-main .ck-message-right{ left:auto; right: 5px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-message{ font-size: 18px; bottom: 100px; } .ckplayer-ckplayer .ck-main .ck-tip{ width: auto; height: auto; position: absolute; z-index: 230; display: none; margin-bottom: 1px; } .ckplayer-ckplayer .ck-main .ck-tip .ck-content{ width: auto; height: auto; white-space: nowrap; min-width: 1px; background: rgba(0,0,0,.6); font-size: 14px; color: #FFF; line-height: 32px; height: 32px; padding: 0 15px; } .ckplayer-ckplayer .ck-main .ck-tip .ck-content-float-auto{ border-radius: 5px; margin: auto; } .ckplayer-ckplayer .ck-main .ck-tip .ck-content-float-left{ border-radius: 5px; float: left; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-tip .ck-content{ font-size: 18px; } .ckplayer-ckplayer .ck-main .ck-tip .ck-triangle{ width: 0px; height: 0px; } .ckplayer-ckplayer .ck-main .ck-tip .ck-triangle-auto{ border-left: 8px solid transparent; border-top: 8px solid rgba(0, 0, 0,.6); border-right: 8px solid transparent; margin: auto; } .ckplayer-ckplayer .ck-main .ck-tip .ck-triangle-left{ border-top: 5px solid transparent; border-bottom: 5px solid transparent; border-left: 8px solid rgba(0, 0, 0,.6); float: left; margin-top: 10px; } .ckplayer-ckplayer .ck-main .ck-preview{ position: absolute; z-index: 210; width: 100%; left:0; bottom: 64px; overflow: hidden; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-preview{ bottom: 86px; } .ckplayer-ckplayer .ck-main .ck-preview-load-img{ position: absolute; z-index: 210; top:110%; } .ckplayer-ckplayer .ck-main .ck-preview .ck-preview-bg{ position: absolute; z-index: 1; top:0; float: left; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-preview .ck-preview-bg .ck-preview-img{ background-repeat: no-repeat ; float: left; } .ckplayer-ckplayer .ck-main .ck-preview .ck-preview-frame{ position: absolute; z-index: 2; top:0; left:-1000px; border:4px solid #0078ff; box-sizing:content-box; -moz-box-sizing:content-box; /* Firefox */ -webkit-box-sizing:content-box; /* Safari */ } .ckplayer-ckplayer .ck-main .ck-prompt-words{ position: absolute; z-index: 220; width: 213px; line-height: 23px; font-size: 14px; color: #FFF; background: rgba(0, 0, 0,.6); overflow: hidden; display: none; margin-bottom: 10px; border-radius: 3px; -webkit-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: .2s; animation-duration: .2s; -webkit-animation-name: ck-bounceIn; animation-name: ck-bounceIn; } .ckplayer-ckplayer .ck-main .ck-prompt-words .ck-prompt-content{ padding: 5px; } .ckplayer-ckplayer .ck-main .ck-layer{ position: absolute; z-index: 101; } .ckplayer-ckplayer .ck-main .ck-tempTime{ position: absolute; z-index: 20; left:10px; bottom: 5px; display: none; font-size: 14px; line-height: 28px; color: #FFF; } /*关于*/ .ckplayer-ckplayer .ck-main .ck-about{ position: absolute; z-index: 200; width: 50%; max-width: 600px; min-width: 400px; left: 1rem; top: 1rem; background: rgba(0,0,0,.6); padding: 1rem 0; display: none; } .ckplayer-ckplayer .ck-main .ck-about ul{ padding: 0; margin: 0; } .ckplayer-ckplayer .ck-main .ck-about ul li{ list-style:none; color: #FFF; font-size: 12px; line-height: 18px; height: 18px; padding: 0; margin: 0; } .ckplayer-ckplayer .ck-main .ck-about ul li .ck-about-title{ width: 100px; text-align: right; float: left; padding-right: .5rem; } .ckplayer-ckplayer .ck-main .ck-about ul li .ck-about-content{ width: auto; float: left; } .ckplayer-ckplayer .ck-main .ck-about .ck-about-bar{ position: absolute; z-index: 1; top: 0; right: 0; width: 96px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-about .ck-about-bar{ width: 140px; } .ckplayer-ckplayer .ck-main .ck-about .ck-about-bar .ck-btn-about-copy{ background-position:-1632px 0; } .ckplayer-ckplayer .ck-main .ck-about .ck-about-bar .ck-btn-about-copy:hover{ background-position:-1680px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-about .ck-about-bar .ck-btn-about-copy{ background-position:-2380px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-about .ck-about-bar .ck-btn-about-copy:hover{ background-position:-2450px 0; } .ckplayer-ckplayer .ck-main .ck-about .ck-about-bar .ck-btn-about-close{ background-position:-1728px 0; } .ckplayer-ckplayer .ck-main .ck-about .ck-about-bar .ck-btn-about-close:hover{ background-position:-1776px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-about .ck-about-bar .ck-btn-about-close{ background-position:-2520px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-about .ck-about-bar .ck-btn-about-close:hover{ background-position:-2590px 0; } /*截图显示容器*/ .ckplayer-ckplayer .ck-main .ck-screenshot{ position: absolute; z-index: 220; width: auto; height: 144px; margin: auto !important; top: 0; bottom: 0; right: 55px; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-screenshot{ height: 210px; right: 77px; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-img{ position: absolute; z-index: 1; width: 100%; height: 100%; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-img img{ height: 100%; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar{ position: absolute; z-index: 1; width: 100%; height: 36px; bottom: 5px; text-align: center; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar .ck-screenshot-btn{ display: inline-block; overflow: hidden; border: 0px solid transparent; border-radius: 5px; vertical-align: middle; text-align: center; text-decoration: none; white-space: nowrap; font-size: 14px; line-height: 30px; padding: 0px 15px; cursor: pointer; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; color: #fff; margin: 0 5px; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar .ck-screenshot-btn:hover{ color: #FFFF00; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar .ck-screenshot-btn:focus{ outline:0; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar .ck-screenshot-down{ background-color: #007bff; } .ckplayer-ckplayer .ck-main .ck-screenshot .ck-screenshot-bar .ck-screenshot-close{ background-color: #505050; color: #fff; } /*广告*/ .ckplayer-ckplayer .ck-main .ck-yytf{ position: absolute; z-index: 800; width: 100%; height: 100%; left: 0px; top: 0px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-front-link{ width: 100%; height: 100%; display: none; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-front-picture{ width: 100%; height: 100%; background: #000; display: none; text-align: center; line-height: 100%; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-front-picture img{ max-width: 100%; max-height: 100%; position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-top{ position: absolute; z-index: 3; top: 10px; right: 10px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-top div{ float: right; margin-left: 10px; font-size: 14px; border-radius: 15px; background: rgba(0,0,0,.6); padding: 0px 10px; line-height: 30px; height: 30px; color: #FFF; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-top div{ font-size: 18px; border-radius: 20px; line-height: 40px; height: 40px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-top .ck-yytf-closetime{ display: none; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-top .ck-yytf-closead{ cursor: pointer; display: none; } /*显示广告时的底部内容*/ .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom{ position: absolute; z-index: 3; bottom: 10px; right: 10px; } /*显示广告时的底部按钮-共用*/ .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-btn{ background-color: rgba(0,0,0,.6); background-image: url(images/ckplayer.png); background-size: auto 100%; border: none; outline: none; width: 30px; height: 30px; cursor: pointer; background-repeat: no-repeat; border-radius: 50%; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-btn{ width: 40px; height: 40px; } /*显示广告时的静音按钮*/ .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit{ float: right; width: 30px; height: 30px; margin-left: 10px; overflow: hidden; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit{ width: 40px; height: 40px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-muted{ background-position:-180px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-muted:hover{ background-position:-210px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-exitmuted{ background-position:-240px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-exitmuted:hover{ background-position:-270px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-muted{ background-position:-240px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-muted:hover{ background-position:-280px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-exitmuted{ background-position:-320px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-mutedandexit .ck-yytf-mutedandexit-exitmuted:hover{ background-position:-360px 0; } /*显示广告时的全屏按钮*/ .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit{ float: right; width: 30px; height: 30px; margin-left: 10px; overflow: hidden; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit{ width: 40px; height: 40px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-full{ background-position:-300px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-full:hover{ background-position:-330px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-exitfull{ background-position:-360px 0; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-exitfull:hover{ background-position:-390px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-full{ background-position:-400px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-full:hover{ background-position:-440px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-exitfull{ background-position:-480px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-fullandexit .ck-yytf-fullandexit-exitfull:hover{ background-position:-520px 0; } /*广告查看详情按钮*/ .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-details{ float: right; font-size: 14px; border-radius: 15px; background: rgba(0,0,0,.6); padding: 0 10px; color: #FFF; line-height: 30px; height: 30px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-yytf .ck-yytf-bottom .ck-yytf-details{ font-size: 18px; border-radius: 20px; line-height: 40px; height: 40px; } .ckplayer-ckplayer .ck-main .ck-yytf .ck-yytf-bottom .ck-yytf-details a{ color: #FFF; text-decoration: none; } /*暂停广告容器*/ .ckplayer-ckplayer .ck-main .ck-pause-yytf{ display: none; position:absolute; z-index: 800; max-width: 100%; max-height: 100%; top: 0; left: 0; right: 0; bottom: 0; margin: auto; } .ckplayer-ckplayer .ck-main .ck-pause-yytf img{ max-width: 100%; max-height: 100%; } .ckplayer-ckplayer .ck-main .ck-pause-close{ position:absolute; z-index: 1; right: -15px; top:-15px; width: 30px; height: 30px; background-color: transparent; background-image: url(images/adclose.png); border: none; outline: none; cursor: pointer; background-repeat: no-repeat ; } .ckplayer-ckplayer .ck-main .ck-pause-close:hover{ background-position:-30px 0; } /*右键菜单*/ .ckplayer-ckplayer-menu{ width:120px; background: rgba(50,50,50,.6); position: absolute; z-index: 9000; font-size:14px ; border: 1px #000 solid; display: none; } .ckplayer-ckplayer-menu .ck-li{ color: #adadad; line-height: 35px; padding: 0 0 0 5px; } .ckplayer-ckplayer-menu .ck-li a{ color: #FFF; text-decoration: none; } .ckplayer-ckplayer-menu .ck-underline{ border-bottom: 1px #000 solid; } /*控制栏*/ .ckplayer-ckplayer .ck-main .ck-bar{ position:absolute; z-index: 260; left:0px; bottom:0px; width: 100%; height: 48px; background: rgba(0,0,0,.3); transition: 0.2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar{ height: 70px; } .ckplayer-ckplayer .ck-main .ck-bar.ck-bar-out{ bottom: -50px; transition: 0.2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar.ck-bar-out{ bottom: -80px; transition: 0.2s; } /*按钮公用样式*/ .ckplayer-ckplayer .ck-main .ck-bar-btn{ background-color: transparent; background-image: url(images/ckplayer.48.png); background-size: auto 100%; border: none; outline: none; width: 48px; height: 48px; cursor: pointer; background-repeat: no-repeat ; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar-btn{ background-image: url(images/ckplayer.png); width: 70px; height: 70px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-btn:hover{ background-size:auto 100%; } /*播放暂停按钮组*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause{ float: left; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-play{ background-position:0px top; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-play:hover{ background-position:-48px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playandpause .ck-btn-play:hover{ background-position:-70px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-pause{ background-position:-96px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playandpause .ck-btn-pause{ background-position:-140px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-pause:hover{ background-position:-144px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playandpause .ck-btn-pause:hover{ background-position:-210px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-refresh{ background-position:-192px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playandpause .ck-btn-refresh{ background-position:-280px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playandpause .ck-btn-refresh:hover{ background-position:-240px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playandpause .ck-btn-refresh:hover{ background-position:-350px 0; } /*返回播放按钮*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-btn-backlive{ float: left; font-size: 16px; line-height: 28px; border-radius: 3px; margin: 10px; border: 0px; background: rgba(3,60,146,.5); color: #FFF; cursor: pointer; padding: 0 8px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-btn-backlive{ font-size: 18px; line-height: 36px; margin: 17px 10px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-btn-backlive:hover{ background: rgba(3,60,146,.9); } .ckplayer-ckplayer .ck-main .ck-bar .ck-btn-backlive:focus{ outline:0; background: rgba(3,60,146,.6); } /*静音取消静音按钮组*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-btn-muted{ background-position:-288px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-btn-muted{ background-position:-420px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-btn-muted:hover{ background-position:-336px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-btn-muted:hover{ background-position:-490px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-btn-exitmuted{ background-position:-384px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-btn-exitmuted{ background-position:-560px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-btn-exitmuted:hover{ background-position:-432px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-btn-exitmuted:hover{ background-position:-630px 0; } /*全屏按钮组*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-fullandexit{ float: right; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-fullandexit .ck-btn-full{ background-position:-480px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-fullandexit .ck-btn-full{ background-position:-700px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-fullandexit .ck-btn-full:hover{ background-position:-528px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-fullandexit .ck-btn-full:hover{ background-position:-770px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-fullandexit .ck-btn-exitfull{ background-position:-672px 0; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-fullandexit .ck-btn-exitfull{ background-position:-840px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-fullandexit .ck-btn-exitfull:hover{ background-position:-720px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-fullandexit .ck-btn-exitfull:hover{ background-position:-910px 0; } /*网页全屏按钮组*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-webfullandexit{ float: right; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-webfullandexit .ck-btn-webfull{ background-position:-768px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-webfullandexit .ck-btn-webfull{ background-position:-1120px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-webfullandexit .ck-btn-webfull:hover{ background-position:-816px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-webfullandexit .ck-btn-webfull:hover{ background-position:-1190px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-webfullandexit .ck-btn-exitwebfull{ background-position:-864px 0; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-webfullandexit .ck-btn-exitwebfull{ background-position:-1260px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-webfullandexit .ck-btn-exitwebfull:hover{ background-position:-912px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-webfullandexit .ck-btn-exitwebfull:hover{ background-position:-1330px 0; } /*剧场模式按钮组*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-theatreandexit{ float: right; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-theatreandexit .ck-btn-theatre{ background-position:-960px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-theatreandexit .ck-btn-theatre{ background-position:-1400px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-theatreandexit .ck-btn-theatre:hover{ background-position:-1008px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-theatreandexit .ck-btn-theatre:hover{ background-position:-1470px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-theatreandexit .ck-btn-exittheatre{ background-position:-1056px 0; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-theatreandexit .ck-btn-exittheatre{ background-position:-1540px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-theatreandexit .ck-btn-exittheatre:hover{ background-position:-1104px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-theatreandexit .ck-btn-exittheatre:hover{ background-position:-1610px 0; } /*播放速度*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playbackrate-box{ float: right; height: 48px; line-height: 48px; position: relative; cursor: pointer; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playbackrate-box{ height: 70px; line-height: 70px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playbackrate-box .ck-bar-playbackrate{ height: 100%; padding: 0 10px; white-space:nowrap; font-size: 16px; color: #FFF; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-playbackrate-box .ck-bar-playbackrate{ font-size: 18px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playbackrate-box .ck-bar-playbackrate:hover{ color: #0368d0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playbackrate-box .ck-bar-playbackrate-bg-box { width: auto; height: auto; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-playbackrate-box:hover .ck-bar-playbackrate-bg-box { display: block; } /*字幕*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-track-box{ float: right; height: 48px; line-height: 48px; position: relative; cursor: pointer; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-track-box{ height: 70px; line-height: 70px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-track-box .ck-bar-track{ height: 100%; padding: 0 10px; white-space:nowrap; font-size: 16px; color: #FFF; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-track-box .ck-bar-track{ font-size: 18px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-track-box .ck-bar-track:hover{ color: #0368d0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-track-box .ck-bar-track-bg-box { width: auto; height: auto; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-track-box:hover .ck-bar-track-bg-box { display: block; } /*清晰度*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-definition-box{ float: right; height: 48px; line-height: 48px; position: relative; cursor: pointer; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-definition-box{ height: 70px; line-height: 70px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-definition-box .ck-bar-definition{ height: 100%; padding: 0 10px; white-space:nowrap; font-size: 16px; color: #FFF; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-definition-box .ck-bar-definition{ font-size: 18px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-definition-box .ck-bar-definition:hover{ color: #0368d0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-definition-box .ck-bar-definition-bg-box { width: auto; height: auto; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-definition-box:hover .ck-bar-definition-bg-box { display: block; } /*列表切换*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-list-bg-box { background: rgba(0,0,0,.001); position: absolute; z-index: 1; bottom: 46px; display: none; -webkit-animation-duration: .2s; animation-duration: .2s; -webkit-animation-name: ck-bounceIn; animation-name: ck-bounceIn; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-list-bg-box { bottom: 68px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-list-bg-box .ck-list-bg{ background: rgba(0,0,0,.6); float: left; border-radius: 5px; padding: 10px; margin-bottom: 10px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-list-bg-box .ck-list-bg .ck-list-p{ width: 100%; float: left; line-height: 35px; color: #FFF; text-align: center; font-size: 14px; background-color: rgba(0,0,0,0); border: 0px; white-space:nowrap; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-bar .ck-list-bg-box .ck-list-bg .ck-list-p:hover{ color: #0368d0; font-size: 16px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-list-bg-box .ck-list-bg .ck-list-p:hover{ font-size: 20px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-list-bg-box .ck-list-bg .ck-list-p{ font-size: 18px; } .ckplayer-ckplayer .ck-main .ck-bar .ck-list-bg-box .ck-list-bg .ck-list-p-focus{ color: #0368d0; } /*下一集按钮*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-next{ float: left; background-position:-672px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-next{ background-position:-980px 0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-next:hover{ background-position:-720px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-next:hover{ background-position:-1050px 0; } /*进度栏*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress{ width: 100%; position:absolute; z-index: 1; height: 12px; top:-11px; transition: 0.2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg{ width: 100%; background: rgba(255,255,255,.3); margin-top: 2px; overflow: hidden; height: 10px; transition: .2s; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg .ck-bar-progress-load{ float: left; width: 0px; background: rgba(169,169,169,.7); height: 10px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg .ck-bar-progress-play{ width: 0px; background: #0368d0; position: absolute; z-index: 1; height: 10px; transition: .2s; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg .ck-bar-progress-mouseline{ width: 3px; background: rgba(255,255,255,.6); position: absolute; z-index: 2; display: none; height: 10px; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg .ck-bar-progress-prompt{ background: #FFF; position: absolute; z-index: 3; border-radius: 50%; width: 10px; height: 10px; top:2px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-slider{ border-radius: 50%; overflow: hidden; position: relative; float: left; z-index: 4; left: 0px; cursor: pointer; width: 12px; height: 12px; top: -11px; background: #FFF; box-shadow: 0px 0px 0px 4px rgba(255,255,255,.5); } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-slider:hover{ background: #0368d0; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress .ck-bar-progress-bg:hover .ck-bar-progress-mouseline{ display: block; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out{ height: 2px; top:-2px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out .ck-bar-progress-bg,.ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out .ck-bar-progress-load,.ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out .ck-bar-progress-bg .ck-bar-progress-play{ height: 2px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out .ck-bar-progress-slider{ width: 12px; height: 2px; top: -2px; box-shadow: 0px 0px 0px 0px rgba(255,255,255,0); background: rgba(255,255,255,0); transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-out .ck-bar-progress-bg .ck-bar-progress-prompt{ height: 2px; border-radius: 0; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-slider-move .ck-bar-progress-play,.ckplayer-ckplayer .ck-main .ck-bar .ck-bar-progress.ck-bar-progress-slider-move .ck-bar-progress-slider{ transition: 0s; } /*音量调节栏*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox{ float: right; width: 48px; overflow-x: hidden; } /*音量调节栏*/ .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox{ width: 70px; } /*默认状态-音量调节总外框*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volume{ width: 48px; height: 215px; background: rgba(0,0,0,.01); position: absolute; z-index: 1; bottom: 46px; display: none; overflow: hidden; } /*全屏状态-音量调节总外框*/ .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-bar-volume{ width: 70px; bottom: 68px; } /*默认状态-音量调节总外框-鼠标经过时样式*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox:hover .ck-bar-volume{ display: block; -webkit-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: .1s; animation-duration: .1s; -webkit-animation-name: ck-bounceIn; animation-name: ck-bounceIn; } /*共用状态-音量调节内部外框*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volumex{ width: 100%; height: 200px; float: left; background: rgba(0,0,0,.8); border-radius: 5px; } /*共用状态-音量调节顶部文字*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volume .ck-bar-volume-txt{ width: 100%; height: 40px; line-height: 40px; color: #FFF; text-align: center; font-size: 1rem; float: left; overflow: hidden; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } /*共用状态-音量调节背景色*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volume .ck-bar-volume-bg{ width: 8px; height: 140px; background: #808080; border-radius: 3px; overflow: hidden; cursor: pointer; margin: auto; } /*共用状态-音量调节前景色*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volume .ck-bar-volume-bg .ck-bar-volume-pp{ width: 8px; height: 140px; background: #0368d0; margin-top: 140px; } /*共用状态-音量调节拖动小按钮*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-volumebox .ck-bar-volume .ck-bar-volume-slider{ width: 10px; height: 10px; background: #FFF; border-radius: 50%; overflow: hidden; box-shadow: 0px 0px 0px 8px rgba(255,255,255,.5); position: absolute; z-index: 1; top: 0px; left: 19px; cursor: pointer; } /*全屏状态-音量调节拖动小按钮*/ .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-volumebox .ck-bar-volume .ck-bar-volume-slider{ left: 30px; } /*默认状态-显示时间*/ .ckplayer-ckplayer .ck-main .ck-bar .ck-bar-time{ float: left; line-height: 48px; font-size: 16px; color: #FFF; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } /*全屏状态-显示时间*/ .ckplayer-ckplayer .ck-main.ck-main-full .ck-bar .ck-bar-time{ float: left; line-height: 70px; font-size: 18px; color: #FFF; } /*右侧控制栏*/ .ckplayer-ckplayer .ck-main .ck-right-bar{ position: absolute; z-index: 260; top: 0; right: 2px; bottom: 0; margin: auto !important; width: 48px; height: 144px; background: rgba(0,0,0,.3); border-radius: 5px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-right-bar-hide{ right: -48px; transition: .2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar{ width: 70px; height: 210px; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar-hide{ right: -70px; transition: .2s; } /*截图按钮*/ .ckplayer-ckplayer .ck-main .ck-right-bar .ck-btn-screenshot{ float: left; background-position:-1536px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-btn-screenshot{ background-position:-2240px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-btn-screenshot:hover{ background-position:-1584px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-btn-screenshot:hover{ background-position:-2310px 0; } /*小窗口按钮组*/ .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows{ float: left; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows button{ float: left; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-open{ background-position:-1248px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-open{ background-position:-1820px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-open:hover{ background-position:-1296px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-open:hover{ background-position:-1890px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-close{ background-position:-1152px 0; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-close{ background-position:-1680px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-close:hover{ background-position:-1200px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-smallwindows .ck-btn-smallwindows-close:hover{ background-position:-1750px 0; } /*循环按钮组*/ .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-loop{ float: left; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-loop .ck-btn-loop-open{ background-position:-1440px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-loop .ck-btn-loop-open{ background-position:-2100px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-loop .ck-btn-loop-open:hover{ background-position:-1488px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-loop .ck-btn-loop-open:hover{ background-position:-2170px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-loop .ck-btn-loop-close{ background-position:-1344px 0; display: none; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-loop .ck-btn-loop-close{ background-position:-1960px 0; } .ckplayer-ckplayer .ck-main .ck-right-bar .ck-right-bar-loop .ck-btn-loop-close:hover{ background-position:-1392px 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-right-bar .ck-right-bar-loop .ck-btn-loop-close:hover{ background-position:-2030px 0; } /*顶部显示栏*/ .ckplayer-ckplayer .ck-main .ck-top-bar{ position: absolute; z-index: 260; top: -36px; width: 100%; height: 36px; background: rgba(0,0,0,.3); transition: .2s; } .ckplayer-ckplayer .ck-main .ck-top-bar-hide{ top: -36px; transition: .2s; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-top-bar{ top: 0; } .ckplayer-ckplayer .ck-main.ck-main-full .ck-top-bar-hide{ top: -36px; transition: .2s; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom{ position: absolute; z-index: 260; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container{ float: left; margin-left: 10px; margin-top: 9px; cursor: pointer; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container .ck-top-bar-zoom-left{ float: left; width: 20px; height: 18px; border: 1px solid #FFF; box-sizing:content-box; -moz-box-sizing:content-box; /* Firefox */ -webkit-box-sizing:content-box; /* Safari */ } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container:hover .ck-top-bar-zoom-left, .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container.ck-top-bar-zoom-container-focus .ck-top-bar-zoom-left{ border-color: #0368d0; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container:hover .ck-top-bar-zoom-left div, .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container.ck-top-bar-zoom-container-focus .ck-top-bar-zoom-left div{ background: #0368d0; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container .ck-top-bar-zoom-right{ float: left; font-size: 14px; color: #FFF; padding-left: 5px; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container:hover .ck-top-bar-zoom-right, .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container.ck-top-bar-zoom-container-focus .ck-top-bar-zoom-right{ color: #0368d0; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container .ck-top-bar-zoom-left .ck-top-bar-zoom-button-50{ width: 50%; height: 50%; background: #FFF; margin: 4.5px 25%; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container .ck-top-bar-zoom-left .ck-top-bar-zoom-button-75{ width: 75%; height: 50%; background: #FFF; margin: 4.5px 12.5%; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-zoom .ck-top-bar-zoom-container .ck-top-bar-zoom-left .ck-top-bar-zoom-button-100{ width: 100%; height: 50%; background: #FFF; margin: 4.5px 0; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-title{ position: absolute; z-index: 1; top: 0px; width: 100%; height: 36px; line-height: 36px; text-align: center; font-size: 18px; color: #FFF; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } .ckplayer-ckplayer .ck-main .ck-top-bar .ck-top-bar-time{ float: right; height: 36px; line-height: 36px; font-size: 14px; color: #FFF; padding: 0 1rem 0; -moz-user-select:none; /*火狐*/ -webkit-user-select:none; /*webkit浏览器*/ -ms-user-select:none; /*IE10*/ -khtml-user-select:none; /*早期浏览器*/ user-select:none; } /*以下为缓动效果样式*/ .ck-animate { -webkit-animation-fill-mode: both; animation-fill-mode: both; -webkit-animation-duration: .3s; animation-duration: .3s; } .ck-animate-bouncein { -webkit-animation-name: ck-bounceIn; animation-name: ck-bounceIn; } @-webkit-keyframes ck-bounceIn { 0% { opacity: 0; -webkit-transform: scale(.5); transform: scale(.5) } 100% { opacity: 1; -webkit-transform: scale(1); transform: scale(1); } } @keyframes ck-bounceIn { 0% { opacity: 0; -webkit-transform: scale(.5); -ms-transform: scale(.5); transform: scale(.5); } 100% { opacity: 1; -webkit-transform: scale(1); -ms-transform: scale(1); transform: scale(1); } } .ck-animate-bounceout { -webkit-animation-name: ck-bounceOut; animation-name: ck-bounceOut; } @-webkit-keyframes ck-bounceOut { 0% { opacity: 1; -webkit-transform: scale(1); transform: scale(1); } 100% { opacity: 0; -webkit-transform: scale(.5); transform: scale(.5); } } @keyframes ck-bounceOut { 0% { opacity: 1; -webkit-transform: scale(1); transform: scale(1); } 100% { opacity: 0; -webkit-transform: scale(.5); transform: scale(.5); } } .ck-animate-circle { animation: ck-Circle 1s linear infinite; -webkit-animation: ck-Circle 1s linear infinite } @-webkit-keyframes ck-Circle { 0% { transform: rotate(0deg); -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg) } 25% { transform: rotate(90deg); -webkit-transform: rotate(90deg); -ms-transform: rotate(90deg) } 50% { transform: rotate(180deg); -webkit-transform: rotate(180deg); -ms-transform: rotate(180deg) } 75% { transform: rotate(270deg); -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg) } 100% { transform: rotate(360deg); -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg) } } @keyframes ck-Circle { 0% { transform: rotate(0deg); -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg) } 25% { transform: rotate(90deg); -webkit-transform: rotate(90deg); -ms-transform: rotate(90deg) } 50% { transform: rotate(180deg); -webkit-transform: rotate(180deg); -ms-transform: rotate(180deg) } 75% { transform: rotate(270deg); -webkit-transform: rotate(270deg); -ms-transform: rotate(270deg) } 100% { transform: rotate(360deg); -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg) } }"}],"posts":[{"title":"WHERE、CHECK、HAVING的区别","slug":"WHERE、CHECK、HAVING的区别","date":"2023-09-06T16:09:44.000Z","updated":"2023-09-06T16:11:12.522Z","comments":true,"path":"2023/09/07/WHERE、CHECK、HAVING的区别/","link":"","permalink":"https://waltyoung.github.io/2023/09/07/WHERE%E3%80%81CHECK%E3%80%81HAVING%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"WHERE、CHECK、HAVING的区别在T-SQL语言中，WHERE、CHECK、HAVING都是用于筛选数据的关键字，但它们的使用场景和作用略有不同。 WHERE：WHERE用于在SELECT、UPDATE、DELETE等语句中筛选数据，它是一个过滤器，可以根据指定的条件从表中选择符合条件的记录。WHERE子句可以包含多个条件，多个条件之间可以使用AND或OR进行连接。WHERE子句不能使用聚合函数。**常见的聚合函数如下：count()、sum()、avg()、min()、max()**。 CHECK：CHECK用于在创建表时定义列的约束条件，它可以限制列中的数据必须满足指定的条件。例如，可以使用CHECK约束限制某个列的取值范围、数据类型、长度等。CHECK约束可以在创建表时定义，也可以在ALTER TABLE语句中添加。 HAVING：HAVING用于在GROUP BY子句中筛选数据，它是一个过滤器，可以根据指定的条件从分组后的结果集中选择符合条件的记录。HAVING子句可以包含多个条件，多个条件之间可以使用AND或OR进行连接。 总的来说，WHERE用于在SELECT、UPDATE、DELETE等语句中筛选数据，CHECK用于在创建表时定义列的约束条件；HAVING用于在GROUP BY子句中筛选数据，HAVING必须写在GROUP BY之后，例GROUP BY kind HAVING num &gt; 3。","categories":[],"tags":[{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"SQL","slug":"SQL","permalink":"https://waltyoung.github.io/tags/SQL/"}]},{"title":"WHERE子句可后接的关键字","slug":"WHERE子句可后接的关键字","date":"2023-09-05T16:51:31.000Z","updated":"2023-09-05T16:53:46.462Z","comments":true,"path":"2023/09/06/WHERE子句可后接的关键字/","link":"","permalink":"https://waltyoung.github.io/2023/09/06/WHERE%E5%AD%90%E5%8F%A5%E5%8F%AF%E5%90%8E%E6%8E%A5%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97/","excerpt":"","text":"WHERE子句可以后接以下关键字： AND：用于连接多个条件，要求同时满足所有条件。 OR：用于连接多个条件，只要满足其中一个条件即可。 NOT：用于否定一个条件。 IN：用于指定一个范围，判断某个值是否在这个范围内。 BETWEEN：用于指定一个范围，判断某个值是否在这个范围内。 LIKE：用于模糊匹配，判断某个值是否符合指定的模式。 IS NULL：用于判断某个值是否为空。 EXISTS：用于判断子查询是否返回结果。 ANY&#x2F;SOME：用于判断某个值是否与子查询中的任意一个值相等。 ALL：用于判断某个值是否与子查询中的所有值都相等。","categories":[],"tags":[{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"SQL","slug":"SQL","permalink":"https://waltyoung.github.io/tags/SQL/"}]},{"title":"LEFT JOIN与JOIN的区别","slug":"LEFT-JOIN与JOIN的区别","date":"2023-09-05T07:04:10.000Z","updated":"2023-09-05T07:06:21.778Z","comments":true,"path":"2023/09/05/LEFT-JOIN与JOIN的区别/","link":"","permalink":"https://waltyoung.github.io/2023/09/05/LEFT-JOIN%E4%B8%8EJOIN%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"LEFT JOIN与JOIN的区别在SQL中，JOIN是连接两个或多个表的操作，而LEFT JOIN是其中一种JOIN的类型。 JOIN操作会返回两个表中匹配的行，如果两个表中没有匹配的行，则不会返回任何结果。而LEFT JOIN操作会返回左表中的所有行，即使在右表中没有匹配的行，左表中的行也会被返回，右表中没有匹配的列则会用NULL填充。 举个例子，假设有两个表A和B，A表中有3行数据，B表中有2行数据，其中一行数据的ID与A表中的一行数据的ID相同，另一行数据的ID与A表中的任何一行数据的ID都不相同。使用JOIN操作，只会返回一行数据，即A表中ID与B表中ID相同的那行数据。而使用LEFT JOIN操作，则会返回A表中的所有3行数据，其中一行数据与B表中的那行数据匹配，另外两行数据的B表中的列则会用NULL填充。 因此，LEFT JOIN操作可以保证左表中的所有数据都会被返回，即使在右表中没有匹配的数据。","categories":[],"tags":[{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"SQL","slug":"SQL","permalink":"https://waltyoung.github.io/tags/SQL/"}]},{"title":"PKCS5padding和PKCS7padding的区别","slug":"PKCS5padding和PKCS7padding的区别","date":"2023-09-04T07:38:32.000Z","updated":"2023-09-05T07:05:30.624Z","comments":true,"path":"2023/09/04/PKCS5padding和PKCS7padding的区别/","link":"","permalink":"https://waltyoung.github.io/2023/09/04/PKCS5padding%E5%92%8CPKCS7padding%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"PKCS5padding和PKCS7padding的区别PKCS5padding和PKCS7padding（PKCS7padding是PKCS#7填充的简称，PKCS#7是密码学标准PKCS（Public Key Cryptography Standards）中定义的填充方案，用于在加密算法中对数据进行填充。）是两种常见的填充方案，用于在加密前将数据块的大小调整为加密算法所要求的固定大小。它们在填充字节的值和填充方式上有一些区别。 PKCS5padding： 填充字节的值等于需要填充的字节数。 如果需要填充的字节数为n，则填充n个字节，每个字节的值为n。 例如，如果需要填充2个字节，那么填充的字节为0x02 0x02。 PKCS7padding： 填充字节的值等于需要填充的字节数。 如果需要填充的字节数为n，则填充n个字节，每个字节的值为n。 与PKCS5padding的区别在于，PKCS7padding可以用于任意块大小的加密算法，而不仅限于PKCS5padding的8字节块大小。 例如，如果需要填充2个字节，那么填充的字节为0x02 0x02。 总结：PKCS5padding和PKCS7padding在填充字节的值和填充方式上略有不同，但在实际应用中，它们通常可以互相替换使用。","categories":[],"tags":[{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"密码学","slug":"密码学","permalink":"https://waltyoung.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"}]},{"title":"UEFI和BIOS的区别","slug":"UEFI和BIOS的区别","date":"2023-09-03T05:30:15.000Z","updated":"2023-09-03T05:33:16.230Z","comments":true,"path":"2023/09/03/UEFI和BIOS的区别/","link":"","permalink":"https://waltyoung.github.io/2023/09/03/UEFI%E5%92%8CBIOS%E7%9A%84%E5%8C%BA%E5%88%AB/","excerpt":"","text":"UEFI和BIOS的区别UEFI（统一的可扩展固件接口）和BIOS（基本输入&#x2F;输出系统）都是计算机的固件接口，用于启动和管理计算机的硬件和软件。 BIOS是一种旧的固件接口，它是在计算机启动时首先加载的。它负责初始化和检测计算机的硬件设备，例如处理器、内存、硬盘等，并将控制权交给操作系统。BIOS还包含一个小型的操作系统，称为CMOS（可编程只读存储器），用于存储计算机的基本设置，例如日期、时间、启动顺序等。 UEFI是一种更新的固件接口，它取代了传统的BIOS。UEFI提供了更先进的功能和更好的兼容性。与BIOS相比，UEFI具有以下优势： 容量更大：UEFI支持更大的固件容量，可以容纳更多的功能和驱动程序。 启动速度更快：UEFI的启动速度比BIOS更快，因为它在启动时不需要进行硬件初始化和自检。 更好的兼容性：UEFI可以更好地与现代操作系统和硬件设备兼容，支持更多的文件系统和硬件接口。 图形界面：UEFI提供了一个图形界面，使用户可以更直观地设置计算机的启动选项和其他设置。 总的来说，UEFI是一种更先进、更灵活和更可扩展的固件接口，它取代了传统的BIOS，并提供了更好的启动速度和兼容性。","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"HW避雷","slug":"HW避雷","date":"2023-09-02T01:21:45.000Z","updated":"2023-09-02T01:22:57.823Z","comments":true,"path":"2023/09/02/HW避雷/","link":"","permalink":"https://waltyoung.github.io/2023/09/02/HW%E9%81%BF%E9%9B%B7/","excerpt":"","text":"被坑的护网(HW, HVV, 国护)经历&amp;套路分享，保持警惕！本文系转载，原文链接https://github.com/venkatorne/HVV_Share&#x2F;blob&#x2F;main&#x2F;HW%E9%81%BF%E9%9B%B7.md 欢迎PR，关键信息请打码或变声，注意不要泄露隐私或恶意破坏他人声誉！可不分享真实案例，只提供套路，能少一个师傅被坑都是好事! 欢迎Star与分享，让更多人看到!为众人抱薪者，不可使其冻毙于风雪。 承诺安排项目锁人，最终安排少量夜班工作天数，提出疑问视为拒绝项目核心套路承诺安排项目，但安排不下去（中介和厂商都有可能），卡在护网前一两天安排项目，每人安排少量夜班工作天数，提出疑问（非明确拒绝）则视为不接受项目，无需承担任何责任！ 极端例子（理论上） 中介或厂商承诺了项目但人安排不下去，护网15天里一人一天夜班，一个人的工作可以直接安排15人，有疑议（甚至不需要表示拒绝）就视为不接受直接释放，快速的继续安排下个人，且责任在于师傅个人。 同时中介不包差旅，一天工资甚至不够路费，为了不付费上班，只能明确拒绝项目，中介&#x2F;厂商无责，甚至可能追责师傅个人不服从安排导致项目出现问题进行索赔。 卡在护网前一天安排项目，让师傅没有选择的余地 中介可能存在的好处 可接近无责大量锁人到护网前甚至结束 优先选择价低的师傅去安排，赚更多中介费，剩下的约等于无责释放 道德混淆：是师傅嫌弃项目不服从安排，而不是中介&#x2F;厂商不安排，立于道德与法律上的不败之地。（如：甚至都没分配到项目&#x2F;项目黄了都没说，你还嫌天数少，活该！） 真实案例分享涉及对象（只为便于理解，某些人请不要自行代入） 中介 公司：成都宏******公司（可能改名）、统一社会信用代码：915Y2R 拉群微信：春（Cl0***） 对接人 微信：*刘（xsy***）、名称：杰、联系方式：*2712 厂商：某数字公司 项目经理(疑似)：*志 核心时间线 6.25 发布需求：某数字公司第三批招人，提前进场 6.25 中介面 6.27 厂商面 6.28 中介表示没过提前进场，但厂商锁人，承诺优先安排提前进场按80%算工资，正式护网15天 6.29 11:29 问询不定岗违约责任，中介表示违约责任是厂商定 6.29 11:39 厂商人员打电话，中间厂商人员承诺定岗 6.29 15:08 跟中介签订合同 7.31 跟中介问询项目分配 8.7 19:53 （开始前两天晚上） 分配项目进群 8.7 22:10 跟项目经理确认只能排7天或8天夜班 8.7 22:12 跟中介问询天数，中介表示他去协调 8.7 22:22 项目经理突然跟我表示：你考虑下其他项目，我这边没这么多空余人天 8.7 22:23 截图发给中介，中介表示客户把我pass了，换人了（我跟中介与项目经理均未表示拒绝该项目） 8.7 22:31 中介表示换项目，需要等明天(8.8日)安排 8.8 整日未回消息 8.9 中介表示：你被释放了 8.9 与中介沟通，索要补偿或安排新项目，被拒绝&#x2F;无视 8.10 中介踢群+拉黑 相关证据 6.25 发布需求：某数字公司第三批招人，提前进场 6.28 中介表示没过提前进场，但厂商锁人，承诺优先安排提前进场按80%算工资，正式护网15天 6.29 11:29 问询不定岗违约责任，中介表示违约责任是厂商定 6.29 11:39 厂商人员打电话，中间厂商人员承诺定岗 https://github.com/venkatorne/HVV_Share/assets/141924762/0658cb4b-ffc9-4d8d-9244-af9ab3b9508d 7.31 跟中介问询项目分配 8.7 19:53 （开始前两天晚上） 分配项目进群 8.7 22:10 跟项目经理确认只能排7天或8天夜班 8.7 22:12 跟中介问询天数，中介表示他去协调 8.7 22:22 项目经理突然跟我表示：你考虑下其他项目，我这边没这么多空余人天 8.7 22:23 截图发给中介，中介表示客户把我pass了，换人了（我跟中介与项目经理均未表示拒绝该项目） 8.7 22:31 中介表示换项目，需要等明天(8.8日)安排 8.8 整日未回消息 8.9 中介表示：你被释放了 8.10 中介踢群+拉黑 个人感受整个心态爆炸，恶心坏了：面提前进场，结果没提前进场；说优先安排提前进场，护网开始前2天才分配项目；说好15天，一开排班7天夜班；（提前进场赚钱-&gt;只给赚7天钱）；中介表示协调，结果我还没说拒绝项目呢，就直接光速换人；（只给赚7天钱-&gt;滚）；中介说换项目，结果白等一天（护网开始前1天）；护网开始第1天跟我说被释放了；（滚-&gt;完美浪费掉你找其他项目的时间）；要求补偿&#x2F;安排项目，直接被拒绝甚至无视，最终拉黑。只能说太牛逼了，这种活该财源广进！ 规避手段 合同约定最少工作天数与保证定岗&#x2F;安排项目 不要理会任何口头承诺（电话&#x2F;微信聊天），只有写进合同才有效 约定违约赔偿金额 不要轻信根据厂商决定&#x2F;按厂商的违约来定的话术，不要轻信厂商承诺 违约是你跟中介的事，找中介麻烦，中介推脱是厂商责任也要让中介去找厂商，不要自己去找厂商 避雷特定中介","categories":[],"tags":[{"name":"HW","slug":"HW","permalink":"https://waltyoung.github.io/tags/HW/"},{"name":"转载","slug":"转载","permalink":"https://waltyoung.github.io/tags/%E8%BD%AC%E8%BD%BD/"}]},{"title":"成为未来的管理者之前的笔记","slug":"成为未来的管理者之前的笔记","date":"2023-08-31T16:58:58.000Z","updated":"2023-08-31T17:01:01.416Z","comments":true,"path":"2023/09/01/成为未来的管理者之前的笔记/","link":"","permalink":"https://waltyoung.github.io/2023/09/01/%E6%88%90%E4%B8%BA%E6%9C%AA%E6%9D%A5%E7%9A%84%E7%AE%A1%E7%90%86%E8%80%85%E4%B9%8B%E5%89%8D%E7%9A%84%E7%AC%94%E8%AE%B0/","excerpt":"","text":"成为未来的管理者之前的笔记 不辞退不够强的人，是对其他正在付出的人的不尊重 盲目换人从来不解决本质问题 有效量化，降低信息差，是企业运作的核心 搭建适合自己的信息系统（工具：飞书、共享文档） 会议优化（具体执行方法：在开会之前采用协作文档，共同记录信息；会议开始后，所有人静默10min阅读文档，有疑点的地方直接批注，在线交流；之后的会议只讨论批注的问题。目的：压缩会议时长，避免侃大山，减小部门间的信息差） 人性是经不起挑战的，商业，是切蛋糕的艺术，即利益分配要合理 OKR体系：全称是 Objectives &amp; Key Results，即目标与关键成果。 O是努力的方向和目标，概念意义上的，代表你到底要去哪里 KR是理想结果，必须可量化，具体到面向个人，代表具体怎么去 参考链接：https://zhuanlan.zhihu.com/p/265830351 内容创作者不要把自己当回事（对于内容创作者需要知道的行业规则之一：和代理有效沟通“返点”问题） 一个优秀的视频应当具备的要素：HKRR（H：Happiness，K：Knowledge，R：Resonance，R：Rhythm） 电影行业的技巧————时钟理论：将视频的时长作为圆的周长，标出0点、3点、6点、9点的内容，如果这四个点没有爆点，那么必须修改，尽可能让刺激点充满整个时钟。目的：可视化视频节奏 不融资的话，团队人数上限不应超过20人 不要留恋成功的一刻，不要躺在功劳簿上享福","categories":[],"tags":[{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"管理","slug":"管理","permalink":"https://waltyoung.github.io/tags/%E7%AE%A1%E7%90%86/"}]},{"title":"网络安全成长路径","slug":"网络安全成长路径","date":"2023-08-31T05:08:06.000Z","updated":"2023-08-31T17:00:35.140Z","comments":true,"path":"2023/08/31/网络安全成长路径/","link":"","permalink":"https://waltyoung.github.io/2023/08/31/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%88%90%E9%95%BF%E8%B7%AF%E5%BE%84/","excerpt":"","text":"网络安全成长路径 学习“小迪安全-渗透测试”的课程 考证：软考（中级信息安全工程师）、CISP（CISP-PTE、CISP-PTS）、OSCP 获取CNVD证书 SRC平台挖漏洞 写一个GitHub项目 搭建一个blog站，记录学习过程与经历，如记一次XXX或记一次XXX到XXX 参加CTF比赛 参考链接：https://blog.csdn.net/m0_67286096&#x2F;article&#x2F;details&#x2F;124020811","categories":[],"tags":[{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"网络安全","slug":"网络安全","permalink":"https://waltyoung.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"}]},{"title":"CMD的常见符号及其作用","slug":"CMD的常见符号及其作用","date":"2023-08-30T01:58:41.000Z","updated":"2023-08-30T02:37:43.298Z","comments":true,"path":"2023/08/30/CMD的常见符号及其作用/","link":"","permalink":"https://waltyoung.github.io/2023/08/30/CMD%E7%9A%84%E5%B8%B8%E8%A7%81%E7%AC%A6%E5%8F%B7%E5%8F%8A%E5%85%B6%E4%BD%9C%E7%94%A8/","excerpt":"","text":"Q：tasklist | findstr &quot;cmd&quot;此命令中的“|”是什么作用？ A：在CMD中，”|”（管道符号）的作用是将前一个命令的输出作为后一个命令的输入。在给出的命令中，”tasklist”命令用于列出当前正在运行的进程列表，而”findstr”命令用于在输出结果中查找包含指定字符串（在此例中是”cmd”）的行。所以整个命令的作用是列出当前正在运行的进程列表，并在结果中筛选出包含”cmd”字符串的行。 CMD的常见符号及其作用 ： “&gt;”：重定向符号。用于将命令的输出重定向到文件。例如，”dir &gt; output.txt”将”dir”命令的输出保存到名为”output.txt”的文件中。 “&gt;&gt;”：追加重定向符号。与”&gt;”类似，但是会将命令的输出追加到文件的末尾，而不是覆盖文件内容。 “&lt;”：输入重定向符号。用于将文件中的内容作为命令的输入。例如，”sort &lt; input.txt”将”input.txt”文件中的内容作为”sort”命令的输入进行排序。 “&amp;”：命令分隔符。用于在一行中运行多个命令。例如，”command1 &amp; command2”将依次执行”command1”和”command2”。 “&amp;&amp;”：条件命令分隔符。只有前一个命令成功执行后，才会执行后续的命令。例如，”command1 &amp;&amp; command2”只有在”command1”成功执行后，才会执行”command2”。 “||”：条件命令分隔符。只有前一个命令执行失败后，才会执行后续的命令。例如，”command1 || command2”只有在”command1”执行失败后，才会执行”command2”。 这些符号可以帮助您在CMD下更有效地执行命令和操作。请注意，有些符号在不同的操作系统或命令行环境中可能会有不同的行为。","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"不同操作系统对待换行符的不同态度","slug":"不同操作系统对待换行符的不同态度","date":"2023-08-29T01:18:17.000Z","updated":"2023-08-29T01:22:04.658Z","comments":true,"path":"2023/08/29/不同操作系统对待换行符的不同态度/","link":"","permalink":"https://waltyoung.github.io/2023/08/29/%E4%B8%8D%E5%90%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%BE%85%E6%8D%A2%E8%A1%8C%E7%AC%A6%E7%9A%84%E4%B8%8D%E5%90%8C%E6%80%81%E5%BA%A6/","excerpt":"","text":"不同操作系统对待换行符的主要区别在于使用的字符不同。 在Windows操作系统中，换行符由两个字符组成：回车符（CR）和换行符（LF），表示为”\\r\\n”。 在Unix&#x2F;Linux操作系统中，换行符只有一个字符：换行符（LF），表示为”\\n”。 在Macintosh操作系统中，换行符只有一个字符：回车符（CR），表示为”\\r”。 这些差异可能会导致在不同操作系统之间传输文本文件时出现格式问题。","categories":[],"tags":[{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"}]},{"title":"DoS压力测试工具——Slowhttptest","slug":"DoS压力测试工具——Slowhttptest","date":"2023-08-28T04:31:32.000Z","updated":"2023-09-03T05:52:46.096Z","comments":true,"path":"2023/08/28/DoS压力测试工具——Slowhttptest/","link":"","permalink":"https://waltyoung.github.io/2023/08/28/DoS%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7%E2%80%94%E2%80%94Slowhttptest/","excerpt":"","text":"DoS压力测试工具——Slowhttptest安装命令：apt-get install slowhttptest 使用方法：ulimit -n 8000 &amp;&amp; slowhttptest -c 8000 -X -r 100 -g -o / -w 512 -y 1024 -n 5 -z 32 -k 3 -u http://caichuanqi.cn -p 3 参考链接：https://caichuanqi.blog.csdn.net/article/details/124744284","categories":[],"tags":[{"name":"工具","slug":"工具","permalink":"https://waltyoung.github.io/tags/%E5%B7%A5%E5%85%B7/"}]},{"title":"云服务器上基于Docker搭建AWVS教程","slug":"AWVS安装教程","date":"2023-07-09T11:42:07.000Z","updated":"2023-08-28T01:37:06.675Z","comments":true,"path":"2023/07/09/AWVS安装教程/","link":"","permalink":"https://waltyoung.github.io/2023/07/09/AWVS%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","excerpt":"","text":"第0步：系统更新笔者使用的Linux系统是Debian 11.1 64bit。 切换到root用户，并且注意全程使用root用户 1su 更新软件包列表 1apt-get update 进行一次升级 1apt-get upgrade 第1步：安装Docker安装docker和docker-compose 1apt-get install docker docker-compose 安装Docker依赖 1apt-get install docker.io 安装完成后使用如下命令检查安装是否成功 1docker -v 第2步：安装AWVS拉取Docker镜像 1docker pull quay.io/hiepnv/acunetix 创建名为acunetix_data的Docker卷 1docker volume create acunetix_data 运行acunetix_web的容器 1docker run -d -p 3443:3443 --restart=unless-stoped --name=acunetix_web quay.io/hiepnv/acunetix 第3步：开放端口云服务器防火墙开放端口，个人使用可以全部开放，如有必要则可以选择只开放3443端口 第4步：测试必须通过HTTPS访问3443端口 默认账户：&#x61;&#100;&#x6d;&#x69;&#x6e;&#x40;&#97;&#x63;&#117;&#x2e;&#99;&#x6f;&#x6d; 默认密码：Passw0rd!","categories":[],"tags":[{"name":"AWVS","slug":"AWVS","permalink":"https://waltyoung.github.io/tags/AWVS/"},{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"}]},{"title":"基于Hexo框架搭建个人博客教程","slug":"基于Hexo框架搭建个人博客教程","date":"2023-06-17T09:16:19.000Z","updated":"2023-08-28T01:37:27.486Z","comments":true,"path":"2023/06/17/基于Hexo框架搭建个人博客教程/","link":"","permalink":"https://waltyoung.github.io/2023/06/17/%E5%9F%BA%E4%BA%8EHexo%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/","excerpt":"","text":"本文前置技能：虚拟机的安装与初始化，Linux操作系统基础 第0步：系统更新笔者使用的Linux系统是Ubuntu LTS22.0.4。所有使用Debian内核的Linux都可遵循本教程。 切换到root用户，并且注意全程使用root用户 1su 更新软件包列表 1apt-get update 进行一次升级 1apt-get upgrade 第1步：安装Git注意使用root用户 1apt-get install git 安装完成后使用如下命令检查安装是否成功 1git --version 第2步：安装Nodejs注意使用root用户 12apt-get install nodeapt-get install npm 安装完成后使用如下命令检查安装是否成功 12node -vnpm -v 第3步：安装及初始化Hexo注意使用root用户 1npm install -g hexo-cli 安装完成后使用如下命令检查安装是否成功 1hexo -v 初始化Hexo 1hexo init 启动服务 1hexo s 在终端中右键打开链接http://localhost:4000/打开Hexo生成的默认网页 未完待续…","categories":[],"tags":[{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://waltyoung.github.io/tags/Hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-06-14T16:55:48.726Z","updated":"2023-06-14T16:55:48.726Z","comments":true,"path":"2023/06/15/hello-world/","link":"","permalink":"https://waltyoung.github.io/2023/06/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"每天一个小知识点","slug":"每天一个小知识点","permalink":"https://waltyoung.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E4%B8%AA%E5%B0%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"},{"name":"SQL","slug":"SQL","permalink":"https://waltyoung.github.io/tags/SQL/"},{"name":"密码学","slug":"密码学","permalink":"https://waltyoung.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"},{"name":"操作系统","slug":"操作系统","permalink":"https://waltyoung.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"HW","slug":"HW","permalink":"https://waltyoung.github.io/tags/HW/"},{"name":"转载","slug":"转载","permalink":"https://waltyoung.github.io/tags/%E8%BD%AC%E8%BD%BD/"},{"name":"成长","slug":"成长","permalink":"https://waltyoung.github.io/tags/%E6%88%90%E9%95%BF/"},{"name":"管理","slug":"管理","permalink":"https://waltyoung.github.io/tags/%E7%AE%A1%E7%90%86/"},{"name":"网络安全","slug":"网络安全","permalink":"https://waltyoung.github.io/tags/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"},{"name":"工具","slug":"工具","permalink":"https://waltyoung.github.io/tags/%E5%B7%A5%E5%85%B7/"},{"name":"AWVS","slug":"AWVS","permalink":"https://waltyoung.github.io/tags/AWVS/"},{"name":"安装教程","slug":"安装教程","permalink":"https://waltyoung.github.io/tags/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"},{"name":"Hexo","slug":"Hexo","permalink":"https://waltyoung.github.io/tags/Hexo/"}]}